(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    366795,       6809]
NotebookOptionsPosition[    364339,       6727]
NotebookOutlinePosition[    364696,       6743]
CellTagsIndexPosition[    364653,       6740]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Vandermonde", ",", " ", 
    RowBox[{"Lagrange", " ", "Polynomials"}], ",", " ", 
    RowBox[{
    "Hermite", " ", "Interpolation", " ", "of", " ", "same", " ", 
     "function"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], ":=", 
     RowBox[{
      RowBox[{"3", "*", 
       RowBox[{"x", "^", "3"}]}], "+", 
      RowBox[{"x", "^", "2"}], "+", 
      RowBox[{"2", "*", "x"}], "+", "10"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fprime", "[", "x_", "]"}], "=", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", "x"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xvec", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"yvec", "=", 
    RowBox[{"f", "[", "xvec", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.722498791488455*^9, 3.722498856793427*^9}, {
  3.722499551301683*^9, 3.722499593852776*^9}, {3.722499636168379*^9, 
  3.7224996636441727`*^9}, {3.7225009804135847`*^9, 3.722500989083693*^9}, {
  3.722502090439104*^9, 3.722502124015903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "10", ",", "42", ",", "226"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7224996640280848`*^9, {3.722500463585384*^9, 3.7225004763376207`*^9}, 
   3.722500989381583*^9, 3.722502127640995*^9, {3.722502164872528*^9, 
   3.722502178797118*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Vandermonde", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"irow", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
         RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"irow", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"irow", ",", 
              RowBox[{
               RowBox[{"xvec", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "^", 
               RowBox[{"(", 
                RowBox[{"j", "-", "1"}], ")"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"mat", ",", "irow"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.722498867551714*^9, 3.722498974965743*^9}, {
  3.72250213783355*^9, 3.722502142795657*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"coef", "=", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"mat", ",", "yvec"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.722498976997908*^9, 3.722499007224028*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "[", "x_", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "coef", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", "[", "x", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"coef", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}]}], "+", 
      RowBox[{"p", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7224990121776667`*^9, 3.7224990606898537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.722499062585285*^9, 3.722499063593959*^9}}],

Cell[BoxData[
 RowBox[{"10", "+", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{
  3.722499063933416*^9, 3.722499293317545*^9, 3.7224994442961884`*^9, 
   3.722499602166255*^9, {3.722500463677058*^9, 3.722500476448759*^9}, 
   3.722502127758325*^9, {3.722502165017047*^9, 3.7225021789250526`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.722499103821484*^9, 3.722499104839493*^9}}],

Cell[BoxData[
 RowBox[{"10", "+", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "3"]}]}]], "Output",
 CellChangeTimes->{
  3.722499105302483*^9, 3.7224992933679857`*^9, 3.722499444332655*^9, 
   3.722499602204246*^9, {3.722500463718482*^9, 3.722500476484201*^9}, 
   3.7225021278036222`*^9, {3.7225021650438223`*^9, 3.7225021789601088`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Lagrange", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lpoly", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<=", 
       RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["l", "i"], "[", "x_", "]"}], "=", "1"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
         RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"j", "\[NotEqual]", "i"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              SubscriptBox["l", "i"], "[", "x_", "]"}], "=", 
             RowBox[{
              RowBox[{
               SubscriptBox["l", "i"], "[", "x", "]"}], "*", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"x", "-", 
                 RowBox[{"xvec", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"xvec", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "-", 
                 RowBox[{"xvec", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}]}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"lpoly", ",", 
         RowBox[{
          SubscriptBox["l", "i"], "[", "x", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.722499122388588*^9, 3.7224992688059464`*^9}, {
  3.7224994602946787`*^9, 3.722499461601028*^9}, {3.722502220488381*^9, 
  3.722502228086034*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"q", "[", "x_", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"q", "[", "x_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"yvec", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "*", 
       RowBox[{"lpoly", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "+", 
      RowBox[{"q", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.722499475203281*^9, 3.722499526633135*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"q", "[", "x", "]"}], "-", 
       RowBox[{"f", "[", "x", "]"}]}], ")"}], "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "4"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.722499685589448*^9, 3.722499711782024*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.722499712384926*^9, {3.722500463803537*^9, 3.722500476567377*^9}, 
   3.722502127871873*^9, {3.7225021651315393`*^9, 3.722502179059436*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubscriptBox["l", "1"], "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.72250034944746*^9, 3.72250036063586*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "15"]}], " ", 
  RowBox[{"(", 
   RowBox[{"2", "-", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"4", "-", "x"}], ")"}], " ", "x"}]], "Output",
 CellChangeTimes->{
  3.722500361241088*^9, {3.722500463832279*^9, 3.7225004765958548`*^9}, 
   3.722502127904048*^9, {3.722502165186743*^9, 3.7225021791135*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["lpoly"], "Input",
 CellChangeTimes->{{3.722500365857682*^9, 3.722500366559874*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "15"]}], " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "-", "x"}], ")"}], " ", "x"}], ",", 
   RowBox[{
    FractionBox["1", "8"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "-", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"4", "-", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "12"], " ", 
    RowBox[{"(", 
     RowBox[{"4", "-", "x"}], ")"}], " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}], ",", 
   RowBox[{
    FractionBox["1", "40"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "x"}], ")"}], " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.722500367037558*^9, {3.722500463870575*^9, 3.722500476640333*^9}, 
   3.722502127954761*^9, {3.722502165230584*^9, 3.722502179162717*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Hermite", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hpoly", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "lpoly", "]"}]}], ",", 
      RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["h", "i"], "[", "x_", "]"}], "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["l", "i"], "[", "x", "]"}], ")"}], "^", "2"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"hpoly", ",", 
         RowBox[{
          SubscriptBox["h", "i"], "[", "x", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.722500378124435*^9, 3.722500473397235*^9}, {
  3.722502241347333*^9, 3.722502246228331*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hpolyd", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "hpoly", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["hprime", "i"], "[", "x_", "]"}], "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"hpoly", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"hpolyd", ",", 
       RowBox[{
        SubscriptBox["hprime", "i"], "[", "x", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.722500521499053*^9, 3.72250054546097*^9}, {
  3.72250061880476*^9, 3.72250067186932*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hpoly", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "hpoly", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["H", "i"], "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["hprime", "i"], "[", 
            RowBox[{"xvec", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "*", 
          RowBox[{"(", 
           RowBox[{"x", "-", 
            RowBox[{"xvec", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], "+", "1"}], ")"}], 
       "*", 
       RowBox[{
        SubscriptBox["h", "i"], "[", "x", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Hpoly", ",", 
       RowBox[{
        SubscriptBox["H", "i"], "[", "x", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.722500696609074*^9, 3.722500786480206*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Spoly", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "hpoly", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["S", "i"], "[", "x_", "]"}], "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "-", 
         RowBox[{"xvec", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
       RowBox[{
        SubscriptBox["h", "i"], "[", "x", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Spoly", ",", 
       RowBox[{
        SubscriptBox["S", "i"], "[", "x", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.722500788379315*^9, 3.722500852682734*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7225008558287573`*^9, 3.7225008569473333`*^9}, {
  3.722500887050943*^9, 3.722500887671008*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", "x_", "]"}], "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"h", "[", "x_", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"xvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
       RowBox[{
        SubscriptBox["H", "i"], "[", "x", "]"}]}], "+", 
      RowBox[{
       RowBox[{"fprime", "[", 
        RowBox[{"xvec", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
       RowBox[{
        SubscriptBox["S", "i"], "[", "x", "]"}]}], "+", 
      RowBox[{"h", "[", "x", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7225009356990623`*^9, 3.7225009659987497`*^9}, {
  3.7225009983271837`*^9, 3.7225010339528437`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"xvec", "\[IndentingNewLine]", "yvec"}], "Input",
 CellChangeTimes->{{3.722501036700239*^9, 3.72250104887947*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", "0", ",", "2", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{{3.7225010379514523`*^9, 3.722501049343109*^9}, 
   3.722502128053795*^9, {3.722502165355586*^9, 3.722502179284285*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "10", ",", "42", ",", "226"}], "}"}]], "Output",
 CellChangeTimes->{{3.7225010379514523`*^9, 3.722501049343109*^9}, 
   3.722502128053795*^9, {3.722502165355586*^9, 3.7225021792930193`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hmat", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"irow", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
       RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"irow", ",", 
          RowBox[{
           SubscriptBox["H", "i"], "[", 
           RowBox[{"xvec", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Hmat", ",", "irow"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7225011328949413`*^9, 3.722501235362639*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Smat", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", 
     RowBox[{"+", 
      RowBox[{"Length", "[", "xvec", "]"}]}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"irow", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
       RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"irow", ",", 
          RowBox[{
           SubscriptBox["S", "i"], "[", 
           RowBox[{"xvec", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Smat", ",", "irow"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7225012372213306`*^9, 3.722501242929112*^9}, {
  3.722501315581962*^9, 3.722501371295354*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hpolyd", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "Hpoly", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["Hprime", "i"], "[", "x_", "]"}], "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Hpoly", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Hpolyd", ",", 
       RowBox[{
        SubscriptBox["Hprime", "i"], "[", "x", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.722501385011202*^9, 3.7225014548496237`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Spolyd", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "Spoly", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["Sprime", "i"], "[", "x_", "]"}], "=", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"Spoly", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "x"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Spolyd", ",", 
       RowBox[{
        SubscriptBox["Sprime", "i"], "[", "x", "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7225014707163677`*^9, 3.72250152005215*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Hdmat", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"irow", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
       RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"irow", ",", 
         RowBox[{
          SubscriptBox["Hprime", "i"], "[", 
          RowBox[{"xvec", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Hdmat", ",", "irow"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.722501538988923*^9, 3.722501623649131*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Sdmat", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
    RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"irow", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", "xvec", "]"}]}], ",", 
       RowBox[{"++", "j"}], ",", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"irow", ",", 
         RowBox[{
          SubscriptBox["Sprime", "i"], "[", 
          RowBox[{"xvec", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"Sdmat", ",", "irow"}], "]"}]}]}], "\[IndentingNewLine]", "]"}],
   ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.722501625608577*^9, 3.722501652437063*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Sdmat"], "Input",
 CellChangeTimes->{{3.722501656949113*^9, 3.7225016576224403`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.722501658024271*^9, 3.722502128146591*^9, {3.722502165517171*^9, 
   3.722502179450676*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["H", "1"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["H", "2"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["H", "3"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["H", "4"], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<H1\>\"", ",", "\"\<H2\>\"", ",", "\"\<H3\>\"", ",", "\"\<H4\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722501668101199*^9, 3.722501776735482*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$374#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
k1JoJf83fGV2a4sTTa9aOV26yl32P5CIO3I=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$374#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
buPX/mxvU+NJS07+mLuz5H8i1Fk6
          "]]}, 
        Annotation[#, "Charting`Private`Tag$374#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/v9Hhv8Bd1D3Pg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$374#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 4}, {-0.1556014852184594, 0.9999999999999775}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"H1\"", "\"H2\"", "\"H3\"", "\"H4\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.722501777402014*^9, 3.722502128269536*^9, {3.7225021656449537`*^9, 
   3.722502179703765*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["S", "1"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", "2"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", "3"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["S", "4"], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<S1\>\"", ",", "\"\<S2\>\"", ",", "\"\<S3\>\"", ",", "\"\<S4\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722501806311809*^9, 3.72250186024304*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
cUw=
          "]]}, Annotation[#, "Charting`Private`Tag$604#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8le8bx48RjnUaRkZWUiqKhDKuu6FBWZGGUlYo5UshycoolSJlJImy
V7bCrYzslb2dY5xzbEq23/n9c87r/Xru67mv6/O57ut53ZLm9wytmAkEwh/G
z///5z+oVG9sTGPO7Y8o999LF7+bvtx6b34ab1sd6CacHSpRPeY+MDA6jT+d
UZLIPMqEe0Ki6Xrd07jY9tnkfsNt2GO49C+un8aJZ3/XhYlJYkllCuHgj2mc
8qbecj1pLy4P2MQdkzONeb38NEk7D+FbXbsFNydOY55kmhBt4Qjm3Kct5fV+
GhMcKDfWRxFOc78jNxM0jeeMi171G2ph/YYg1Rs+03jp+3mWJg1tPC/+9UTT
g2ncI/hG6FW8Hn73329dZDuNS6SHmicqDPGRsr+XM02ncX5QqqPKgjHu5dtu
JaE/jfVC31YHWFzGUgWmjwgq09jQ/s95s4c3cAXR099h7zSO/Rf9NeeZOba5
+il4cMc0Hk2tUTPIt8Tp6yMJpazTmH/P1MpuW1tsoM+RfXBxCgfYiSr8mriN
/3zaWxIzPoWDuX4Eury4i49o3Wv1apnCcO1vxR2SI+59FzwwUzGF2z0P+zx8
6oQ9qNn0G4VTmN3T4dMC7wNc/nyRcCxmCk9e+16RcsIV67d4yzHdncJlxrwB
06c98fzOz6r/3WTs9yiaSTnUC797UHliyGgKZzkW24cHeuPe7VxXfqhN4QKe
LQ7ez57gW2ah/t5ExvssezWn6gOwx0T8ANOXScxjMmc3kvkaS2pW0/8Ln8T2
xvYF68bBuPzV+N+h55P4efxHjei1YMx56CD3T8dJXNzdZKdr9Aa/fVio6oMm
8cLpkKVAsXc4la0umLl3AqcrPRYyEo/C5HNJwpYNE3j42tQztuUoLPjGP66i
dALPyw3FCnZ8wD7ix3KffpnAg0mxFvLhH/Fl1bxO3nsTOHGiKCoo8hNms4sR
F2GewAYuweQWmy/4Rv39tEN7xvHiSSOBhOQ0zB+6o9ryPg1vd/dY2z+Rj089
qjBNu0XDBc4N1Y6KBdjZ3H7m7xUatqc5Ble7FuDOg8WCAcdoeDQnKfLzpkIc
VW9qncRLw1HDBeV08W94J3sUy1QiFR84azz3yrgIK7gJa7r0jWEbFrUwleul
2Pzmz2bcNIa1C3LZ9nmX4pAzdlYc5QxmD92y7XMp/iPw7UVE8hheTp0tLaGV
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
PsxrPh47P7exQUK98ye9dQwUNf4HTCC7zQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$604#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
50Fip8/InPwf69zq7w==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$604#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$604#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 4}, {-0.31910002238887636`, 1.0041170867980287`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"S1\"", "\"S2\"", "\"S3\"", "\"S4\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.722501860770142*^9, 3.722502128411778*^9, {3.7225021657796173`*^9, 
   3.7225021798531313`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Hprime", "1"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["Hprime", "2"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["Hprime", "3"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["Hprime", "4"], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Hprime1\>\"", ",", "\"\<Hprime2\>\"", ",", "\"\<Hprime3\>\"", ",", 
      "\"\<Hprime4\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722501888182692*^9, 3.722501947691057*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k8lN8Xxy0z9iGllEpISslakeTcNklSydqihcpXJUuhkl0JyVZKQlKh
lBTS4pJ9SXZmMPYxlixjmcXS7/n9Na/36z5z7/mc8znnPo/ihevmFwX4+PhU
BPn4/v879UK38t+/cczHh4Yei30peDJu23R9ahz77deMaz8ejfX2eHd1Mcax
wq/4oQN7UrBPf+EM/j2Oj7UOXPFQyMZiW0yU/J4T6/dmpty7irDS19N3+HTH
MSe2o8T9bD0uFfW957J5HH9V+zSW4NCAHU+9jOpeO44NVNjPWy834g+LA28L
SePYC2Y3PHBsxjsPXG/yaxjDNrcu7lp6goqPNfhv5Xcew+EZ6y9qXe7GU+tT
9VzPj+EQ2biYYlo3fnKzbF+PxRhOVKCFXTvSgztWip8s2jWGo4EUIqHZiy+f
jb3nLzqGU2VnzCOH+7DP6Jsu/td/8fzh1z63tw/i90I1UQIdozj+aoXnCtW/
uNc0Xc6hdhQzq7+FF4f8xbIx916VFo7ioFEzVf/Bvzhg3Z6ckNejmOHReVQ7
ZQzb6uW2SV4fxWlpx/YdEJrAQk7J61YLjOLDbZJMvlOT2CDrbpr39Ajen5Ow
8DxwErvOntSiM0bwN5lD1PJ3k7gjYPm+l9UjWEqvcraRN4k/Pw+9tPHxCD6Y
W4BqYlj43O8bmTqbRnCJxt7HHz9N4SfLzHc8lhvBZZ+pSbGNU7jaVgPPSozg
z8IrniydmcI7GEN1+ZPD+KDP5b3tO6Yx5Z/dNHwfxg6Vcq6ZOdP4m+ahXaZm
w9hRLjPnV/IMnvBQKclEw/juyn/2rj9msMpPwSNSOsPYLWSxorB1BkcdKrBr
kB3GL5STX+yjzGLHCzoBNj1DuGCj03uG+yxeHru20uHGEG5LpK8U12Rjozul
pzMvD2GzvNVDYfvZ2OPCtYmZk0NY4N+rtYU2bNym+VP2/p4hbFWyXn2/Hxsn
/D59KV1yCMeK+eiVVrPx7y8k3iT/EP5T4e010snGi8/fP9SfYeJELyPxinE2
Puc0/6W6nYklXd89f72Ug9cLJwiOpTGxqtv32/MWHGwxti9uRwITH1Bvudjl
wMFBzSObfR8x8cm9KwLu3OBgxqtd5ks8mPi4s/vX7mgOzkDtydr7mDi8Ppvt
WMPBWrflDD07B/FUjnxlgTYXXzj/qx7XDeLoVet/2BlycbSx00WRkkFMybO9
9vMQF0+v+Bb+LGMQizRRLn49y8VfP9u2f/ccxAXcPys+hHDxUDz/ddKVQWzN
tnE6Es3FcgHpAkfsBnGy9OYtH55zsfcxrip9/yCWDH9+MCeTi+HvUy++pYO4
UENmfV8tF7s0IYlDZGL9/cCquBYuTv7OTIriMLBPfO5aKToXC4TqlSt1MbC7
WGac6SgX67h2n7zSwMA1eozspVNc7GATMva5lIEL7Y02JHK5uEylbfmB9wy8
t0DMWkiIh9kUv/SHSQz8gJ2U3yfOw5tmNu5uiWbgWNeC/PvSPBxa7Olw+RYD
b1O42KK8hoe/Z6zjfLzKwE5lhrHyijw8GlUexjnLwIeK9mt3b+DhI+dkPz8w
YmD/dKbZD3Ue5vsYpLRUn4EvCo1ZFmvz8JeFyaj4rQy85oRZwuMdPOxoepZ/
vSID044lX9XR5+E1z2tc3skwcPzG/dIvdvNw3dDObh0RBhbxtm9qQDwcpPf2
6I+5AewcPPmvaR9xfrO/+u/eASw2vSIPDvFwsvL4C8uWASz6X3Bz2mEetnA/
TaFXDmAT+pKAriM8LPKr0vvSzwGs8/EFuf8oD/9Yojs6ljWAI01pabnHedjl
bOopz9QBbGQOX6xP8LDyB+nqf3EDWPOFlEu5BQ+3zfvoh4QN4PxzNspCVjwc
fng0fYnvAE40mFwpY83DKN521TO3ARxt7v14kuBpZlmI4qUBLHT6Uk+iDQ+n
6W7jpNsO4G+YsW+NLQ+fvvfysvaRAXz97T9BJ4KXNEu2fkMD2Ge5j2MIwSXr
vY32bRvAQTxunifBXm5DOdUbBzDXpEVPj2C1IqsNFqsHcK7MHq0qYv9uqZLY
DskBnBCrM7iV4Fg7LdJFgQG82tQt2Z6Ixzgz0f3vTD/+teJhyhUi/vk58b6b
Q/34C3RpG1nycJbJLfPFjn6M4h49mSL0OzxjFN2r68cWIZFLb5jz8ErmCS2p
kn5MUk8eKT/GwzU7ipLj8vrxtKPxpXEzHvYLVl+i8K4fV0/Ty4ZNeXhb03Pf
tMR+nHc3+Pg3Ex5mKomOa0b344ocVRM7Yx5OcPWwyw/uxzZOwdMtB3j4WGHf
7z23+rHbM/lYZaK+JKnju6uu9mP9+wevHiTqf/X9ljXtJ/pxx8NHDRTCLwpz
T8PsD/bjoCPHGZ8IPzUdEpob0e/Ha/Yzd6vp8LDBYDd1XrEfZ6u8KUrdwsPi
Sk/i5Cf68MToq6Pv5Xi4wEVQ+G1fH5Y4mp8nuoKH3bCLh0ZrH+49/NgFCP/T
Th+2RAV9uHC1Res2YR7OiONbdiG8D4uYl/uZTXKxHeNawLBvH+brMfO6OcLF
S7e3T7q59+FTSwYKPQa4+HZDTl3gyT78eXvaHlEqF5tQrkS83tSHNamPOm8U
cHHUsZg761b3YWfFtm/tuVzcFvPd8RmlD+9JbYxe+ZGLL8pJ7HvI6sX6o0LX
lidxsd/GTPaNH7342p9r5sp3uThnz/i5/cd6ceLtvH00LS6eD5I1K9jbi93y
56VKN3Lx3grYpbe9Fzdv7E4OXcvFdWaRy9XkerFmXfPOtyJcPHxKq2pZfw/O
cLE4pd7JwQoe7jp9nj04YaZo9RdfDr6c/1zhjFMP1msO97/mzsEf5osprad7
cDbfAx2hyxy8K1CGWbWnByvslX3ccoSDrSJzErLFe3Dm4KNx3ioODstgkwOS
uvGmpBK9iPds/PcnO2tPRBeOEr/R//nHLHa515kseLML/9d8qmYocxZPmxVH
lp7qwpxt293EkmbxfFeEyyHVLqy5qvuXhP8slhBQ0TxeQsek68Lzcvtn8RYj
i4/neJ04a2mC9YOyGfxfbVam76UO3LhUsoyvYBoP0P/L+GlIxSXG+4Mu+LOw
wSErf87lBtwbbnWr4Oow1h8evbn3Qjk+uwmRquu6sPvthMu783JwtMdWQ6Wz
1filqr1urEkOXiL7QKK1ugr/aVMVHun8go1b7Cz+6lXhLbp5b56SvuDsic0e
SKYS903VD0wdz8ZKLZ9rHv0pw69pkhUW1EycmG58/4DtL+xQ2F+ovj8Zsy4e
3t7i9Rn77e4v/NqcSLxHPeM8uJqN9XiL/5atf4EzSt1n5M9/wmnu23yqfj7D
nrd/Z3c9+4DvX0q6rTsVjV/IT0jft3uDV2o1/z7gdRO3PU/NGOeFYAMmPV6/
5jGY1FSDzfM0WCPhIrB4Pg40N2korbPNgAUNfqci9lMI7Zap37H8PRR4rt9p
vD4BHtc3dlqEfIRkwS8jm3e/hAq/Y5tWbf0MSjGcB3qxbyHPp/RgW3M+LKOi
PlXFbJBpvi0giYpBQmnDz/h72UDVDuxPelkMpCuiceKj2fD0VFoLFiiB6fl6
k7+5n4ExRzVPLy6BJgX77CzTHNDfsvuVPCqDx47B/rpeXyEywfrmjfWVIMup
XHfgTwFs7rqQNRddC7OkwNV52hj4K/7b6tJfCy3SBrKqTwje15Dnvv0PVC+3
vn9PvRA2K4t82NjyB0I1Kn2cZgqJ4b39rcKDOhCxz7ymHfgLfmyUORD3rR5I
VTcP/0osBVPpL4kNrEa4ccz80J26UhC2SfJwlWmC/hb1g9sEyqClMk23dXsT
FPcN7n1zsQzWxgq5sT2bIGDBVj9UrRzkBmg4lNsEfFqGqubfKuDUjRsHFiab
YSFOSLi3uRpObGDuV/raCkqmbEqzeA1QL27e0NXUCkZ8TJmKPTUQuYSmZzvZ
CpGOlUofMmtgTL55dbBqGyjvDDe8HfwbZGzFq348aQMTmrTHUkIns2oo9IsD
FZwjBO6Sr/yBaz8qlQ/dpULM3qlATvIfqItXfPb8MbFuOWx8XagO3N1Y+2+X
UuHrz2orS7c6kOzKUFJQosHhiAg3RZN6UF4blib3hwZ2TKFZuYv1kDPICI3p
o4HLXt9bMn71cD3ZYEc1mwaxs9f9hHPrgbesSs1zXTvQ7Y5H/FVsgFnpZ6HF
V9ph4mul9KBBAyRFyKVu82kHwWV7H3dbN4Bcgqbsxch22FSundD4sAG29O22
Jn1pB1cNmYx8bgOQy5scDTntEPQgfOtnmUYYfarm+V6kA570kT6912gE+qZW
X9rKDvgWN5OXdLERztepN3vodQCJr7U0uL4Riv58msi+0QFxdc96jqc3wZfR
ua+mPR2QzfQ+evdXEyjY9+2aHO2AWr5zP9PamyCRUg9nOR0gpKXy7B+lGTa9
GFz9VLITPKKyj2W6NYOp/ctLvnqdEJ3+uKAtrBkiv2/QdtvbCR+KvNRIr5vh
sPulDRqmncCYNBQ51doMVkdTqcJnO8HKvBqLGLSAvgSra0dAJ7g5fdi6zbIF
FkWWHL0b2gkRAVHPzzq3gBl7e1xEdCeUZVt75ia3gECEmeTSlE7ordIf6Mlv
gVsC/leC0jthsXftCUpjC8Qk6S8WZXXC9mX96g7kVrhQ4q2UVNAJx7aUJzyS
b4XgW8F9hqWdcHVfhth33Vb4cHz5zozqTkh1d2FIO7XCq+PeAv2tnSDTNP8C
17ZCyYGK74y/naA52iU+MtgKbtesfg+wOsGUVHxrBX8bbC77qfeJ3QlB2x5Y
XtNpA2rnk4BMPjokm14tfmraBkDfEEsn0eGHw1GtkottEKtTcbFDhA5Tscsp
q5+2wfuDcp8Ml9BBMpNz2+hTG0TnS519tYwOm0vbma5VbbAj5NX25hV0MOos
sHrR1wbhuSeONq2iw4WZlyUV823w+r9fZclr6OBDCdaeXk6Fj/k5ufrr6BC/
wTF5nQYVpANl9VMU6ZC7+7DkYWMqXNWdudK6ng4NlureHuepwPzge5m2gQ5j
16SHX96mgjlXzPjdRjqI3Zu2/h1DhXsakqomqnRQSWwt5bynQvr+9Sp5m+mw
N/ebjnIZFWpahU6xttDBrvbFy6NdVFAjP+2bU6PDbYaf1B0OFTi6be2NW+nw
ZNH+7htpGlTODZ+9rU6H7BUHR+o308Cpdnn4OMG16pttF/bRIGASe+to0GHY
iFK+6QwN/A3czIwIFjo7sc3CgwYnx1rWbiJYybMxxfcRDZ745gtTif8bPspd
8i6NBrtvCKnaEnzy7TOfliIa8LZWJ6YR53tg71H+dhqoFGy/V07EF9V69uTW
aRqIfo2dzyHiDxH6XXNTqh34kmgMK0Kfz3Z9KNjcDnZJl9XxJjrccHj7Scio
HUR0pbhjKnRwipFRPnq+HQwK6q4ylOlw7pf/kzjvdghf3/rxtRIdrCfHRLrj
2oH91ouppkCH/Ucr/7rUtsO/FT+bYuTooO+z41z+UDuc/tnb7C5LB63MVw38
5A7Y6J52eY0MHeTFffKid3VAqd0QtVyCDjL6I6rtVh1gY64rWk34R/w/m4T1
bh1ww6TqUhzhL06Ztv+XtA7YJ6VqGj7XCWMzSVPzxR0wuF1KOWe2EwaUKZcO
dHVAyCPnqreTndAQMGjSsrwT/OzuKY8wOqHik8VPea1O8Hd9qmrQ0wkF3UUa
l4m+3ejckmTd3gnvDBNkOESfLi/ZETRW2wkp10Tvo8ROcPg8tN+pohOeJnhw
Q/I74f62odWfioh+4B2jr5roBC/lqM/JnzvBLpectusM4YMUsqLE406wGHCT
C/KiQ7RdzOaB8E44LNMdXhNDrPNyn4cGdYKe2zfXM1V0uC8re26XeydIq1/f
5avbBdaaVpt2mnWCyJmOzHLzLtClf1K+vZ/o/7BDCkucu6BDsLs3RL8ThofW
k1+mdsFObTuLJSrEvDC/erlHpBtSHBq7q3kdcGY4JTl4RTd09JRi3/EOaPOn
UlWVu+Hc153FAv0d8CfLyNQNuuGrov2IR00H/JBU1BL06Ibh8NJPa54T87aq
mafc1w1V39UF72l0QATPyObBRDccMFzyIUixA+5t/przd6Eb0vRESdbLOsAj
NN4ld2UPPJI6fsFzth2sTc4yDpr1gLasbum7b+2wsopZ75TfAyIo8YzYrnZY
wrPV+FPWA37qVzJtCB+KbK4O12nqgXtFeZ53V7UD50HmwfmxHljZ2KV9mLhv
qIfcfj5U7oV9r94fms+iQXzlXFrWo16oPWXk2rmGBtHcq0LLX/TCv9+uoumi
NAhVpdvfyuiFLaJcfrNZKtx+UCi/t7QXcn4fq1P+Q4VTh4JjG3m94ED6Ii7u
S4U1lZJ+sxf7QIZUFdTX2gaJFYrWBgb90FvhvVnmeis8t65Izzfuhz3OIen8
tq3wlOE8v8OyHzLqUHnD3laIJv14qeXcDyYCeXcVVhBzGFmNqiT3w9n737Sc
v7fA1a+h/tKkAUjfovBuho+4F9Km3jGqB6Djlp96rVcTtN4v5Ys6NQhpsv8i
gpTr4ZzS+133CoYhdl1k/HmZXyDnM1z8dfAvFOp1/f0p9wiiaTljBzIm4Glu
mln3wQJsqCr09l/WBLi80ZsKqijAI55WZ/PzJmDCU+n1uDHG+5ez/6iVToCX
9Z4jocqFePao3qdl3RPQ5H/0woH1Rfhk6Tf3nuWTkCC2M6FGrhivz8Icb/9J
mH+0q29svAx/Ca4U+GLDgpCvn458VazFfYFftvPsWFCxQ3VdvkUtXhqQ5Igu
sqDtXem2yPu12MXnZm2NKwuUq++aFY7W4i2eivEDoSyoSZzfppTzB6c43tKS
/cmCbfbvn9MT63DUYdVztxWn4KpVTYnzigZceEgmpnDjFDQshPmv29qAxw7+
KxVSnwKL3GHZr/sasOn+5i0x+lPA27z2erJLAxbZ7c9+d2IKynQ11xyubMB+
6tSIzuAp8GgZuTZ1sxE7Sz/4iYanwH1n8sG/35uwxeMnWpKTU3Ajr/KOZH0T
3rkq9XU7ewpeiP/HlGI0YZIifuhBngbhcyWL2VLNOF5z5sx7hWnof2Wv7Xm+
GZcdPb8oaz0NDFxW1r3YjN83OrsNnJkGs+vBilzpFhxl7c3IdpiG6D3iyyeU
W/Dps3G1R9ymoa2n2v6WSQtmOf9ODHw4DeepR2ZnY1rwuoidMF48DdfPlyg+
UGjFpKUHP/+omgZByp1qX61WPPzYYmNo/TSsmDJ9fGJvK859cV1qQ9c0OKYF
akbbt2LTzNddJ3nTUHmyXOG/1FbsVSPtV6Y5A3ZDg8ZX1rVhu2PrpmN0Z0Db
dW2Pqnob3tek5njecAYOG30wLjFow5IdB4/NH54BMa9duuG2bTh15K6C9uUZ
OEm6dONSVBuuExsufPFiBmQPB4ps47VhPcPoj+xXM2B5JcCziUzFya76iccz
ZmC5tI6thTQVu7SF3iHnzcD7qGkD1kYqXvJmy45rdTPAaZwQen2Cio/uufbO
QHAWLoldlGlPpeLcG8vjn4jOgrZvnePVD1Qsn/YzZEJqFi7/d+NsRx4Vj0lK
XkpdMwtqV5IFbaqoOKLjg4LEjllY4b6++8dfKq71nHjc7jgLQqVNsjrqNLzj
3dOg7ddn4dzEgl76dhpOpCP3RzdnYXtIw+EFAxp2PhB1bF/ALCw5ViQPh2mY
skxb/N3zWXhmkOS06RIN3zCicUkpxPMdW0QfXqXhjlsBTLu0WfjUqnPkjxsN
v+9uKF2aMwvsFHLKqA8Nm35w97tdOwv7FXlhDx7T8Jee1debmmbhjFrFBVo8
Da9ZXnJGvX0Wzpsuxosk0/DoHZldvYOzcOiL4JKFdBq2+PhD1WBsFo7xLHYX
f6DhH70OK59Mz0KF7dLMS59pOPxQzswhfjYcvWuw48APGp72PtP/SpgNer6a
e/wKafh0FrlxgcIG9tok16clNKwma5X1SY4NbjcubDxXQ8PV/bNOq7axQV5k
UM2URsNuDj+unNBnw5qNRnrnOml4Zb//1YeIDdGVd6PNu2nYoU/Cmf8IG/bq
n17bQHzTiNk3OO86wYbpj3v2nWXS8KfeuOs3bdlwa8E7pWqYhhd7lFyHLrLB
6WQhZ9c4DaeeZ7quv8qGCxzuwJ5JGj7ck+l2xo0NtpGjnA1TNMw65+4e58UG
Lca8GnOahp92692o92GD1MYPd0Nmadjw3OIN8WA2tI28ZAhxaHigq/jmgTA2
6O96am/PJfJx9oGHbxQbhMKvT7zg0bB2l5lnfhwbdMqVH+TO0XCbnYzX1As2
8Jk0qmbO07Avneq1NZUNw4Nfav0XaFjFLunW5Qw2pIwq3ti2SMM1nQ63X2ax
YXxt1IpSgt3ObL7TnsuGez/jsnX+EfnpHL+z/CcbCkOH9vsRXHA6x/toMRtO
lthUZRB8seP23QeVbFi3uQU+EyxxGvkU/2GDy6JLyjOCs9vJvgvNbGgQth4/
Q7DNqWpf3Q42XI9uWs9H8CIt0s+1lw3nXS12+xHnp5608n/HZIM237mddCLe
w7TVAQNjbBBTTlouRzDLtidg3Qyhx7Ttjw6h7yn1TaDtHBtmPSYubiH0G9pe
DYrh58CZLSPNfER+Btq0gn8Lc+CZ//DaL0Q+w23YwcKSHDBW0DA4wCby1/bj
3h4ZDmgartT4MkPkzzrg/h05Doi8Wj/DR9THp/VgSI4CB66n/Q3fwiL81NLw
QHUrB4LbytXkxoh8WT0NtdfhQMvjdG36CJGvljNhL3ZyYKncX7LfEOGnZma4
tBEHPP6FS5/pJ/xk+eHhYVMOxMR/NH7aQ/ipyT0i2JwDJq6FJp/oRD4aFx9x
7TjQn//gg3cbkY8TJZE6Fznwc+WClEYzkY/GB1HXrnDA4mHTLlxP6G+Qienx
5IAOxWPKq4rQb06LWe3DgYs/xn1Tymi4vz4p1jKIA2MVam3pv2hYq37zk8pI
Dqz4ljx2/Buh99jEE8E4DkzM3PnAyiH01uXE7X7BgS4D+92un2i46g969imd
AzzSeI1wGqGn1irh2S8OKIS2U+NjaLio0ZB+spID9Ic9t7Mf0rA8VUVhTR0H
7M/p/H15n9i/b/ZVYicHhO9GHRO5Q8wL7pN3rzgcID89eXnqLA2nL/r8dfjH
gfhv+YxKGxoWIl3WUBHiAl+Z3XGv4zRcKKn7OW0ZFwrln3NO76Xhbcqt3zLV
ueCVvyhipETDUap43nk7F3pE75/qWEXDY+pvDTUNuPAzvvuniTQNp+30/JV9
iAsFetfLP/6j4jVHZavyHLhArxJ9+JxGxaTb1tSieC7ILx10+BdCxed9YXXg
Sy70NQ08XOVDxQVBG8/sT+PCcN9/GhLuVOz1iN1dlsMFfemxudunqXg0NY5Z
XccF6u77r3y3UnHTn1Z2sxAP5Ott5tQq2rBWM94ZR+HBnRKRooZvbTiC9vaO
jQwPbC/0Rx3PbMPGA57/aIo8SCvw9qUR980PnqxwtwEPeuc6vsv9/z7aYLNi
2I0H67rbau26W3EQjdage4sH5wRWO6bXt2L7R2ceBfvy4LpqRl7Dr1asxL0g
ohjOA1NTz9Qi4j5MqrnGs37NgzX/rRiUvtyK490D6aWtPEjuaRG5N9CCI4s+
vHlpMAfBrJMdS6uasYuHlv343jl4xwjbezivGR/d8mXd7kNzkBtsPWGf2owl
H+c/bbOcg61qrNM7fJpxmGNJqNT1ORAV27vyvGYzvidFc777cg5sKiWvtEc0
4btnyLq2QvPASug2adrWiGWeZmxTp8zDJtN5gyNrGnFGw1FtQZl5mD8RYvFK
sBG3HIzfmqk4D6S7m44P1jdgdW0NZf7d8yBX0bO8/moDpgvZSqe7z8M35sIc
SqjHhlnvRzjd87Aiwu37/ZI/+J+ARfLT7wuwKCfjX6ZYgZserMg68msBnox+
cljdW47TllCxQOUCFJzxStZPKcfH5O26rrYswLOpyFVUxXKcstNRfs/kAvhu
lZhIkC/DRi7eCUMqiyAa84XjKVmCIzpTn+pHL4Jv3XuniGiM5b/ORHY4/oPY
6UmX7qEMPPxGMTbJmw8Frv7FJ6GUB882rSLlW/KjyISoej+dOngcf6n8vIIA
SmIuoUYWUMHbI8Dde70ASnl1Pf5HLxUczBPXxakIIH6VSvV2IRpoi7V41qgJ
oIU/L9QnzGhQe+vAJt2dAuhm6dO1N+k0ELFVfiBhLoDMK0WNy3ntcFu21yQv
UABVSXnOuRDf+2djz9RKDAqgsLmgpwvre0Dps9jqK8MCSHL1tyMq23ugvz7v
cuVfAeSSOHJoj1EPOEot5b83LYBqLeOyjjj2gFtomc4/fkHU06f03893xHeK
n8azyTWC6Db1pHKvRi98uMrv0GIuiFTLKp9FqPWBS9iHrG1Wgmhx991ftbv6
QCfj1EK0rSDSIx0nL5r0wdfBnCdHzwmiY4aaN1X/64NfF5wqK64R664qez+l
9kGLTaP69xBB9P7MWJXzyn5Y2P+am1QgiIRXps9PT/aD3/ekwJIiQWR79sac
2GI/kLTjKUMlgqjJYt0zKbEBkFj3SFG7WhA5vFtq3684AHJcr0MlrYLI2UBK
+tuxAdDLNH3GnBBE3gcNRknvBuDH+oPrKdOCSGpGoHQuZwAgfk+mFlsQ/bql
L9JdOABG93cU3V4QRAI6pACXlgGwPK8wJCFGQlt11bQ+8jHAbfm0ntZ6EirM
F6XEHGfAbNjYL0sVEsqNiv1qfYoBtwWGTG+rkhB/XFuKyEUG+I93nivWIKFF
1t8hdS8GRFaWh1gakNC9ea09YS8YkHn3edstSxLqqbbZ6t7PAM3pxxcSbUho
g9rRnVOjDPjiFDn66xQJnd2954LdDAN+WAfzSVwgIVrOhpIZ8iBUaV3flOhM
Qp6k31QVlUFgDuz1+nWfhPZbdvIHXhiEg0m1KZvDSCjy952yA06D8Mbm5O/o
CBI6V+CRO+Y6CA7Vrkr2j0ko4g6viOU3CN1ZyTWCr0hIXuz81qIXgwBOauwr
b0hoL380Kzt1EBLXf1VsSiehtGVduqHvBuH0kz8eqVkk5MMNHmN+HYS2O4sK
BwpIqHPVxl8ODYOguz30cGYRCZ3ZQ93t1zYIT8aWeywvJaGRYP4YP/ogWJzf
Wj1QTUIX7H97agwPQp3R6Zv3qCS0aeUx1j4+JmjwMZPGOkho+KMqXxCZCRH5
7lVW3SRkY/DxQJoYE0zVwtZtHCShFV9tNr2QYUKF9LfK8mkSCi0bVN6xkQkb
qw9Ma3BIyFfLsuLxFibcC6qXfzpHQpvv/xKiajBhP5vp7ihARuXnacJiekx4
lXUjsY5MRiu6bVPZu5gg4MRXqSdKRs98Ax9VABMKO2TlRZeQkfZ7FyGZg0xY
9+SVsesyMrock381woQJPkc13KkryEgzNq9l5AgTDH4ZVaSvJSNL4eYrRy2Y
8PXtTTeTLWT0QyH1Wd5ZJsie53+RrU5GFcrCa4wvMMFD7mG5nDYZmTy5teS7
AxO2PUxdM6JHRtF1N0WM/2NCjJHmwRMGZKT24yPz/BUmsP59d/0OZKSXbDt9
5hoTstway8KMyEii6pLxvAsTpNTOTk4dIqP+X7ucE92Y4DwwvPr0ETKSPOdw
W+kGE34nehiVHCOjBcnWUyE3maBmI+CqZkFGGWtf8dd5MCFMOuJ5rDUZveuc
OMn1ZMJw1aqy+ZNkZFrOb026xQTjoNcTDnZklJegOTBB8NvdWqt/nycj9YeT
0wW3iXqYiQXOOZARf1V4hf0dJjDP9g2rOpKRllnD0F+CRVx/mNtcISNvkXuH
z3gzYVPA42/3nIn/p/p2fyLYOMZZKceVOC8l4/kIwY6pB0P7bpBRq5uQi9hd
JhAvayxpLzJafPjmmCTBaWVcW3SHjC49zNZkE89XtDYUOfuQke+BS4KlBDOZ
71Rf+JMRnS79w5NgEV5QVHUQGUWOrzKTIlhV3I7LvU9GibHs92FEfCZrdM9v
CiMjhzC9mlFCj9PWJZVWEWQkf9g3SZvgUMMhzeAo4jz5QLkzhP6Mo7+efo4l
o1KDJVpXvZhQde45X28cGe3qF249+//8ud5wXPKcjNhu5/j0iPyKBR6pM0wk
4vHb8HKaqMfmWBW9ay/JyIrrmfnYnTj/9b+k56lkNLYtYtVqon5OuW3CVW/J
SHnZF2oQUd93baGtKh/IqNGtaiOZqH/NkD1YfiL8aYgTVxP+GOUZvA38QkYl
7jW7VhD+UVs77tH9jYwMrDZ/zyP8ZapeQZcsIKO/ERr37Qj/XYWXRruLyMjp
bq7pEOHP9+dPrIgvJ6NvH9OeZpwk9ndT86moIiM/fm/RHmti/0AyY/Y3Genb
vjSeI/y99U1ezokmMkJ174XbzZhglhe5NqCVjHaWfHJLPkz4r+K/4CwaEX+C
UcAhYyZ8GF5tSekh/F5w+pLRHibUzk3/2NVPRhOjuSrxu5kwJlGr7DRI+GHB
3L5+JxPUNfymy/4S/aMltHlYiwkf3ftj/HhkVCAX0lWswIS6oJ9zHxbIyPPR
HXftNUyYePzEvpNPCFl9DtMNkmWC5ldjHX1hIZT7+ceWegrRL/PvG6aWCaGz
8v3VUtxByA6+KX15qxAaHg+/tbJqEFgGZwKCNYXQkB1YthQPgtb0/qlXOkJI
kSz8z/PnIGRdkGnu3imEdgy/TL6UNQiZ8PnpSSMh9N5//NRE7CCkcSfWmZ0V
QvUFSDDLhpjPWW2RVy8IoXDPTa/fHhuEjY6F/GEXhdB6r4cfA4yJ+dzyqK/8
ihD6rkcf7NUdhNTP6m/3eAmh0KtZ5oeXD0LStavq26OEkH0huzyvigF0ZYuk
E7FCyGwi83FfIQPkO3YtcYsTQtMx4n6sXAYkmIizPrwQQhOL7s/zUxgQvzEj
Z1OGEMoO+nd/lLiPnvQMGqwpFkKaa19f6V3HgHBL+8OCM0LoSbR3w4L1ALw9
2nH6IkcISTSez7xwaAB+HbJ0Lp8TQvtdlu96rT8A7N0Ho8IEhNGFzULOxWsG
4ILKltZlS4QRz0h/u0NXP+ixWReUtwgjp/C1E7p2/dD3NOD2gfPCaPP1gPM7
9vbBYvRc2FsHYUTfOHXBQqMPVj688ULUURhte3jC4diaPjDzv1T421kYJViF
ePfO9MLX/0yErLyFUWT7t9Trb3shQn9p9KU4YRRa8iFAh9QL+h0v0+//FkYv
ZTuFn6V2wwp1R87HOmF0V3qz6pJH3cDyVT/Y1iiMxuwKY51udUPG+u/9m2jC
SH7Nd5fKI92w6krTuiqGMHo0mpVwbrgLOFyhJxJ8IuimzkE367t0yJO9GhCl
LYIYDeYqlrfaYduJHaeex4mg2bDR5oI/TTAy+NBE+LkIcudt33omuglSvAd2
uieKoNqt5B+FFk0g/SZ25eHXIujTgPrxtrZGGOOwmnnZIqjsWfLWo/QGSEv8
eOxkrQhS1pQXDqfXwerhTUaryKIoctmIyK8rlSDgv1orzk0UJbu7eczc/ABJ
OzJMHh8SQ8bFf4MPltbikI6IPKWl4mhq2USls2QPnvvU+DBkuTiS/OVok7Kj
BzvfX+kwtlIcWRjuoNTY9WAL7ZQl39aJI25YfxTfxx6sEJLz3/Gt4ihd49OD
frNenKfTsdrPWBytaUKTJuF9mBGq6tfpI45ejnitXjo3gG3POVvtCxBHIo9X
aZ9WZOCa7Z/V0oPFkcF2M2bkQQbO7jag3ggXR/5W8W++xjCwz45j2hLx4ugS
/Paa3TyIV/R69OvniKMVT+JuNVgw8YGdJcZPR8SRX5n05q0xw/j2JavTJWPi
RL+kvf/8eRh/iGFen5gURxsCxcXXNA3jFWMSccYccaRe5zwcKTOCGSmWAxyS
BEp0KBDjjx3BIRKD/rbyEuhSUKhDWvgoruoS/S53XAKBsGXwtQtjeFEiodbI
QgI9NdM08PAZw9r66r1u1hLo6B6lBIv4MRwfay5afUYCKTT+/hpZP4avHHpu
fcdJAsk83DXH2z2OJT6rTbcHSqCQ7R4Ra4UnsNm9o1tf5EqgTXNVM19LJnCK
7cSh/HwJ1Llyv/StPxN4Ri3qUvMPCTTnrLRfnjaBExobkijFEsjjmOAK2fEJ
PKRgtdTnjwTaaDvx3w/ZSRz0/TTbjimBgrjbdV/bT+K2iIVld0YkULFSS3vC
1Um85UKiZtyYBDHf38p53JzEDSLd//2ZlkBZv1T9a+5N4nVW9h3AT0FL5S4l
CaRN4m8T/xUpyFEQ585+1rn+SSxZIkY3WEtBm1qdR61GJvH5uHc8GwUKKrE6
37SZNYlFDP/qRKlQ0B7hyTtX/k1iyzCXN/w6FJT4xSrw0EoWTrOTLl67g4KU
YrKMNsmz8LxWdtfOnRT0vTFQqm89C6e0Ta10Awpa2V2TP6LOwhMbPMN6D1OQ
6YkXSXv3sfB+rmzaohkFban9XcA7yMJxNV9L5MwpCJl3j4WbsrChO2/B3IaC
DPU/BRpasnCU0XO566co6HTRjOMZWxbuX2WgG2ZHQSedN52zPMPCYYV3XYod
KCisfXfgHwcWpsfIP+y6TEEBHcvVjzuysPZlnD7nREGCp8qYGVdYuI3C36fj
Suhd5vpgwJWF1Xpe/jt6g4K6KL9HS2+wsO+XvWuuelLQ+vaSk3c9WVjlVJBl
6l0Ksohde9TFm4UtXXOXkvwpCMYN+qk+LBx0n/nHPoiCXJoEyEv9WTj7hdzD
4vsUJJBuc3plIAv3fDY1WR9GQTV93bGjQSy8pMpHODCCiPfvrE3EPUJvd1ZJ
bxQFreX/aL5wn4Wvzfb6731MQbniLVt2PmDhBInlkPKUgkQfTj7cE8rCVUoH
5/kTKMjJE5RWhLEwV+9W/vkkChqTyo3KJXjT0XceRSkUFFIrGKwUzsJWFzt1
FN9Q0HLDR6m2BAffkZr0S6egSx0eT08R/CVqz4fu9xR0nBcpsong3rfuV1AW
BaU9v5JQQOwnXfB6U/Jnol7WpnPyBKOm1oF/uRQUs0OzxpiIx3lY9NXZbxTk
8KQ6ZxcR7ws+g3P4JwX1k0Pt2ISemhXOa9cVURBXJeLqHUIvTy2Z5lNCQeSI
T8HlRD5U9zXE0cspKONl0NH2ABa2sSVZGlZTUP5ts+u5fix87/qOpYm1FNRa
LBFqQ+Q7J9jxz0I9BZ145r6/6A7hh+fx4WeaKajb8e/eCS8WXppdc+hnG+Hf
+njVgZssvKdiUWhtBwWJBJgnJLmxsAtds8S7i/D/6peG666zcOL0Bf+OXgrK
lqj8bE/4Y16hfO75EAUpC+9K2WnPwlt0uV/nRimovePxuSo7Fj55ZIvHqQkK
+mQ/ckf+JAvn3Xo0IcemoGs812NSx1iY8ago8zaPgsSMzpi+M2FhmTdTTrQF
ClK/lbdZ9AALuzVYDzwjSSIN88klojtZOJn5IIUrLIkOR2naZmiz8J/F72dt
xSXR0vQXJAk1wp9bFGgrl0oiI0NfASmi3wYDmbVx6yTRrY9bOCJEf66Ilwtn
K0kia7u8/JTZSbw/y/SQtYokEjX7UM/9O4lTOrKKV2yVRPLev73o7ZP49PZb
Xx/rS6JkRd8Cjy+TOOzwu5szuyWRvZjasYl0Yl6c79S23COJ2g+ZrFROmsSy
EXsyZYwlkdD61blfQ4h5wxBNibGURGmkr4uhNpP4l8WDhHwbSVQRbPzmrekk
zv4lEtd1ShLdtj5ZFoQmcXSicPiWC5Lok/Ided+Nk/i4Fdmj2FkSqdR0M5xY
ExiVBLkMuUqi3KtHJAL6J7CmNumK1E1JtDNwKb91ywReIil47tQdSTRw78k/
vfwJXFfKZzJ1XxJJJdQ2Nt6ZwIU6fvtXhUki24Uxzp8rEzjr5T9DiCD0G8ht
v39qAkfeXdQJi5VEJKueqA36E/jo9vm1619KIpp0h6UmcxzXprInzb9Jovtu
2+YlcsZwwVLPUa+fkuiOCM9HJnwMf/CbZSQWSqIdp41Y94j7I+L0TPtwmSRS
dBWoSqeM4SMyU6UBjZJofOLCv4bTf3FN4Niz7FFJZDyk/VeKPoJ/TF6LbRsn
6rvv7Ibr70bw+7N/IxZZkqiJ3he91WsEh+8aDTThSqLpos+UUqkRfHhq6Fov
WQoFml1yOKQ7jKsuDOxZuk4KGdR7z89fYuJO0lvOYyUp9H716zV1Skw88cbx
4yoVKcSgmwdWdw7i5SMjaxS3SqG872mVO44P4nPuLLbGLikkxYaYwq0MzA78
l3nEWgqten1qd/qPPiymUuRQf1IKNRYX3fV26sNrKgJWW9pJodGLpQaXZPvw
XgmhB6cvSiFqg1aal3MvjoiVcLjiLoXQDkfFW9I9WPn1KrkHj6TQcTGIrzrR
gXUPttdJxEgh82/OCmpR7dhkKOF+5BMplKWBXB7X0PD1rQozcS+kUNubmwM3
d1PxtxyVujfvpFCfyX8yW4Rb8LEynXsl5VLo7ctP1ZEutdjeccbAuFoKzXte
PC6WUYM9xPKmqmulkHzZ+OsDXVX4uZn++cZmKVT5Mq7hr0E5ZrQgg94+KbTy
XI7ORAjGXC+BqYuDUuiNm+gaZu53LLG6JH1oWArJzpJNlnXkYe2zB2UnJ6XQ
/fuZZTTxLHyAX7T2xowUWnS9aF2qloZtXlUFcThSKGqrvNCwRjJ2OhC+y3te
CvXwh62S3xuJ7w4eYf37J4WKB/wO3a/7WPA/3EIfVQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$690#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
G9cPgIrlFvn8k2zU9iTf5RllAKzP6v83bc5GTlJC+x/964fdLirS44eIfCqn
z9380Q9nyqN5prTYqNS1mcbM6AezTePBolvZiJKxVO/yuh++6Z+8RFZmo+c6
pmk2If3QceyajbcUG2UZ/D17wKwfrIxaIuJWWGgxaI1pwb5+kFLeNnGPxUL7
ytFu3e390FDCeoUnWajONEpii1Q/6Eys67LoZ6HRM5qVq2l9QDJbZ1VYxEKy
t921B+70wYiZhTLdm4Uu5L6QtXXtg9u/HK0eubNQxmIxpdWmD9x4eAJWu7LQ
7kDx4UqDPtjYCD/yTrDQiaishC+CfcDVSJ/1VGehh6lzPAGveqH31+6+qdY5
xPg5l2kQ0QNaXy9GG4vPoeshf5K4bvUAeY3a3RXeOTRtWhz1+0wPDCvpZb1c
mEWLPRHXjVV7wP/0/s4n/bNIiFNJ43hJN3z+sXD10udZpGZo+fns/B/wOrVJ
cPzALLpYk5nu69wFIek2e46dnUH07oupP/e2Q7P32u1rz02hiKjfsQ4K7RA4
7zD22XQK6e6T8+flawdugd/yO/WnUNi7tpPH69tgY8nrEvE1U0jjshEP/Xwb
xAT/93xV1T/kyVY8K/SgFcbvFunv1P6HRMV7Jc40NkNrGv3tyTni/258wp91
oQFEt0ukasI40hsdv7XPoQwmyuJhs0g/cvdMuLDnexbEPM2zi9hXh/SHu5/r
VcWiJPXgheDpDFjDqth4sLYAHeopNy3zaIJZ7sD137UAZcaPenRlNUHLKv01
qk8BTR9qNCqfbAKqxMnQEPVCxDJsdVW42Axh2yruuc4UovLSMk26VQvwnU+/
ohVYhDS6n8UFKLcBd+Wtw0WJv1Gh0qerEamdcNPM3Nir7jfijj45eKSvE2gt
6kY6nKWIdcvOrmdNFxQPDO1771SKhu1ofH5BXRCwZK0XtqUMsfTLHDPO/AGS
5l5V87xyRAvIKcnk6IGlODJvfzMVDaoJWU9K9IH8kTlKs2AVaij1q3mq0QeG
pGHxcoMqZBj08JDc4T6IcqmQz0ivQir801vovn2guCt8r2dwNfr4YtWE8nAf
mHSsui22vRYt82+LevK1Hw5HRLjJmdQju/2g0rmdBnbD5Fkpp3p0LeLXfomj
NLi+z9dD3K8enRiJ/artSMzV2Wt+vNn16NDF1MANxFzstjsewZBrQLernz14
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
/UhITbk9hIzKFb5tKWKA36S7ZWH0EHLR28SIzGWAyhn5lL9lQ4g8ufWTOzH/
PNV9j5nqDCNalKNRgS8DaOWuih0Gw2jp4l2ZW54MMD1/gu10bBjJkPJa1t1i
gHz81jc+rsPIkRSmttWVAVSOrtm0pGHk5UPZ6mPBAOlm3URBygjqso1qq5Mn
5vk1Rfc4qRF083uZ0xVpIh5+0UMKKiMo+xy9nSXBgJK9Q5N6+4n3TVy5XXwM
uJISe9DVYwSlzegrdDDGocDr33g5fQQJPNy3O+/bOJyVT9sdUjCKdPIEeIJ3
EP+b9dU8atRRdPm8XlSG+jjslWDW1raOIrcNHAJUpXGQ5tNwXDc5iixrO0l/
JMehlfE1PE1hDNlFkP2dZ8fANDf/T8P9McRNK1hc/3UM9phRfTdajCMfeZ92
N4UxkLo3WpwzxEDzMXNsWv8IzAaYiV6eYaCxCZ0ei1bifBCabbORi4m40lZF
faeOQFh0wEywDBNlJrQm2H4bgYW3UsoWVkzUWNh4Ril4BLqoJmGMIibSlY/S
zSPOH6/WfTKTT/yLgq++i7loMwyPO7KYB1MnEEkxj9743yB8C67g/HbqH6J5
/tiqsmkArq568BOPTqG4zO+p7vY9UCcwWvjy5Qya7d5Y+mmlFai0Wdd1OnPo
p7Xz04a4enBz/HHJQm8OUdR5OAX86mEtzf/yIzyHcos4VY+61IPjgNBVjqNz
6GPuXfqsbj0s98nfGHGaQ1699/LbO+pAq8f0Tm7cHDJRVC0aka2D+Pb3gdYL
c8i+N/Ws+pVqcKw5kfCMuNckI+mbmyTL4Vfj3u7TFSx0I/xLZfNIGci0K8lK
17GQWRPd++PPMmgbmH2T+Ie4Ry2NOOY7lcER9tNPb4h7lKvbF9Pw76Wgo9ia
l67ORn3Lcybz534Dt+fJ9l/P2ejOqUDb/IYiOOeL1ge+ZqPGDKGTAp+KoCBI
2fZACnEvzjne7htYBHcj53pLs9gIwm3ru3WKYPxt3DC1jo0uVe+ZvfrsFzTV
ts41k+fReNVc2ujFQni76ZTkqNs8GlL/nZx1/AcEdXQ07PSYR0FifbsGRX/A
+UjbyGDfefTW2HWzXV0+yLMd+OTC51F3rUqAolk+vKq6Mn/y3TxS6VhNp1jk
wXP3wO7frfPowkUn04vOORD1K+P9a/0FFKNJsuov/kbcpjXP/923gDJfp+pt
Cf8Gx9S+bdxjvIBkDDUNCi2/gXBsbnyb1QIq5QqbLR38Cg9dSsJEri2gqheW
HWbCXyFEpOOqz+sFlLjjmqXjpf/Ax5ZnpzV5EUVesO1ryE8D8fhUHXXKIsK7
tki5nkyD1IZjWlzii2hyarvZ16lP0GL0fGu63CL6qx7Ka6P+CdS1tily7FlE
u3f/AL60j9BNtl710X0RpcSve/un/D3cNFgWvue5SOQ/vi3h2nsQ8H4jZOG/
iCzp04vCa97DjkkG71LEIoq2s9kh5PIOIjoDls1SF1HMLQflS2JvYW9m2hir
dxHlrXlvUnD/NTSNHh+pHiLWf1/4kaH3Glw3zQ0mMxeRdOrlQ+aMJHj63KD/
yOIiUsgOefbFMgmYQS1tSWuWUJuIA+fnk4mQaE0qPWS6hKxeyHlYzT0DnZh3
xRusllBLJPPA4xvPoLLG5Ne/M0tITN6dR4cRD7P7Y38kXFxCU7Zj3e+G48BU
ffPXiaAlZDRImtk7EQsrnJZJ8flLaNsbr49y+x5D0wPJzKNFS6hdwI6Z1BQN
KaLtwFmxhHw710XecokGMxm7nsstS0j/ZBKfTEwUJO9ykTGYXEIBGmvXUmcf
we3Czeqzc0voy7/kRjHNR3DYiLHn0/IS0uPdHclxNRymLd1sJYSW0V4F3pn6
v2FgeN07YURpGXFKejhsW02cAeb2piVuXUanXiauS3IIhb8+HD8sdJbR69EI
x6/fQiD+YUjnT4Nl9C/a2gTOBsPo+yipxzbLSGZ7dfnptgCI+PM2Xu/xMipo
vSAkGeYNDo4XUv7GLyPTK9a66d5esHNMNeftK8Jei3Kq+01P6GVltAqnL6Pf
ghs23Xe/C1riuZIDZcsogWM+LfnzTSC/8FKKr1lGAt5LDqFUd+iU27vjaPMy
Mqn9ciZi3A2CthVbfe9fRu+fZqgt7rkBLSbVMQ+XllHXT4rTYf3LkFof+RZz
ryDSGF2u5bcr+J4y/zYjsIKGd3q+uW99EVScWxvt166gT1E5pVavnGFx/NmA
+MYVxJlin+1y3Anq3W2mKjatoNMOJeQYiiN4+veJ6WivoH8Dnn8V3p4DU763
8iO7VlBGbJuv372zoBDprJWIV1BeiVJR5W87qEoYO85nuoKCurXkrj05DTI5
M1FdLiso5LfVcREZC7jFNF8vc20F+YpoLdyPOA5Vipnv7G+toJatTv76ombg
Ee2a1++/gn5s/XHBJcIE6srKDijeX0EO9o/9G1lGoLSsWOsUsYKsqUUtd4IP
QpNrz8Dw8xWkblZzUoPHANRe61/d/HoFja62eHRkYg8EtD5jXfqwgsSPMhma
UnrQTpkLSE9fQdm+e2cnQ3eAxgFLyt+vK6iBzH54ZZc2hHr+F6eRt4JcK+us
gtU1oDtTWN6tcAXlPN5wR7tmM+gMXUr7WrqCAiKtqiRKN8HDDRU7ZqpWUMTe
ct8bB+Sg30Lp147GFXSk27Ve8LEU6IYFHr7bTujplVSk8GE1RBb2Nuf2EPHs
Kl1/LFIQBmf3nF2gryBdc7WRTYMcsGfri1H98RVkTi9fDHgzXRBznnXz3r8V
5CkYwrA6MFAw9sxqBVgr6PCmiiVdzdKCfXVfHnCsEHp5J7+bSHctOMLFF/aa
k4Tv/SrFDtbfC+4m7jhWxEPC3zQufZr811nwZpeT+AAfCdevq897mTRRUNP0
pJ1LiIRNF8pVBeyXC+avFSUqipCwvnfIwqAUH2wSnDx/UIyEiwwMzqfdXwVm
7zeqOkuQsLRj7tluvrXgbWDKDFlLwm/l4z94PNoIKV3eXz+sJ+H4tZ/yZgUU
ofHOp7vlMiSsNPWPv6lOBZbFOvaMyJFwzkvRK4Jr1WFzBh+XwCYS9hIXfqg6
oQknjHeWb1Yh4UlZPvtM8e3gT3N6dFiNhAu4/RtueuhCm1TxmkeaJOy2Yd9M
JAcG7uzJrnQdEv4TNGn2Z/U+2HZcNrlmJwmH6B+PXDp4AEJCfbaI7iVhLQ0l
n4v8xvCffNqkhgHBcMMw4vlh6PrZkX38AAlLop1KuodNQXt6p8ETExJ+t7ZE
wJnHHOwincnfjpIwqfKxSlm4BYRtjqU2mZEwQxWWihSsoPfsPyvJkyQsEdB1
0sHvFERUp7k+O0/C/UcvnJKbsoc8l85tec4kfGDTkNiGhbNA5xKY6bhI8AuP
pKPcDqCvd8FX+joJ3zY9Lxiy1ZGYL3Ixr7xJ+MuOrgcFHS4wGdTH5vIjYWb8
xleCOq7Acnht7xJIwur7yavln14Cno1yapphJHwra2k64uZVkI2TLSqKI+Gj
Z+hldUfcQPlWr7LyCxLWri1z3iXtDuoWSY8eJpKwwAq3+Ohfd9gtImtt+Y5Y
L5E3Lv72FpwI3ThB/0LCMSpdtSrIA2ydeqxMsklYPvyYvquGJzjuf5WfkUvC
PfuKeps3ecGNFZnQO4UkLOq4+FB6gw+E35GR4a8h4ZQbmgU+iX5QdGHDkS0j
JGz7RdX70MZgqDj457+ocRK+6p/GczwnGOoUXq6Z+UvCequjVx2zCIE/PdID
P2dJuPJyiYdCZCiwTkp7HuPmwOucCyOmNoSB+qH1KW4bOfB7x5An1k8j4ZnK
Ou5cKw6sGJllcX8yFs7aKX0YOMWB/XIMnu+zfAoqMdomwjYcOMxrkCP3+1PI
WTkadd6BA4urkq62+MVBW0uAtPA1DtydvVMud/0zWBs8rnP+PgcWUo/NMnRP
gLg+cKLkc2DWt/10s/rXEPvcueycLCeOTv026kf7CN63A9y9FThxjbT1OXGV
VHA0T9wYp8SJ95sfiuq/lApaAi13qrZwYvn7B5e3TKdCjcdBlZ27OLGjSrLd
Jd404LNWfCBkzolv6ovfXqObAZ5r+k2+B3LiI16O3Nvt/wP7GNsaoSFOzKlr
lS0imw1LB96xXxVwYUlYOel0oxD88l8FlvziwoVfV720Di4Ebq3nlJESLtyu
63nY+FkhCG2MlNOicmG9c7n7pX4VghT7rnFJKxcedHLfc0/0F+imH3k2PMGF
rXnct6pl/AI3iWldTQVunOzfnbwyUASzD5lFVkrcuHT/ll2r54rAk3PkiKcq
N5b2U9beIFAM/n//nC3exo3l72T9t1qjGKIqyu5b6XPj295Zt0O8iiHd50Wb
hxU3Lg/fseasaAkM0/fdLQrlxlEWbYZVGr/B6FVN8uaH3Ngm3s+2bf9veH/q
dPXjCG7seX/cuPHEb3Ck3pA/H8uNTTJoHTHev6E3M6mK6w03vpzmb29Q9hva
vJZlDxZwY8EvdpvFrUuhfFVeRdk0N84Sc9l08EoZKFMPTm9jcWOX0D+uVJ8y
CAmql4lf4MYpv82t9CLK4MDcsLsLJw8ufKB5sj6jDAq71sjwi/LgGN57Jd3M
Msj5cMvNRI0HO6k/1jrqWg4f9miurz7Hg4cV7glvOVoB5aYCgQuOPPjUBZX6
MOsKGLYfGFV14cFhVXvF6pwqQCUgNi/kKg+Oksn1pNyrgJRStjX24sFW+TEt
x9IrIPVYUfzXGB6ctsgX3kCuhMqzL0j9cTzYrDBwLHRVJYzeuOki+oIHS7pI
+spJV8LmGCXdK695cO3U5BeSZiV8agtrVcrgwYem3zhdsq6EtHMWks/LeHBi
zH/kxreVUOW25V55JQ+2fD/Dk59eCeOBPIOz1TxYKGuOJzi7Era+/55l0UT4
71Z7r6CsEjJG11tR+gh7EVVxxcOVULMw/WM3jQd3O5r0fp+oBKZQjaLrEA+e
Mby+7hGrEtS3+U2XMniw7KrPre28VPjsTnviN8+DM7rZPSxFKtQF/VzIWOLB
utUsvkk1KkzEPj3/h0TGT//cWlehRQWNnEPaerxkbFblcXUtpkLmYlrD1Goy
vr1O3E7DmthPCdGTX0PG91Le7FS0J/bL2CebSZEx82HH7KwjFTQNVrmly5Lx
x01PP+hep8KX4FurLmwl4xynEAfVYCr807cNCNYgY4nFB59ZD4j10wem3miT
sfQH+90fIgh7DuLNvbvIeFUc7cXrOCr8Xbd4cEWfjD9fWbWT8YIK6vUD2Rsw
Gdd3CSauSaJCOvoaf9qQjGPfZtvypVBhfPY5v4cxGWtbdvrUfKLClowAz7gj
RDyfsllun6mQKm1u02ROxq2mTREnsqkw2rir+p8VGWeVhbrF5lJB9aHc3lXW
ZByS3GTw5QcVUtgTG03tyXjrfd/twUVUGM5si7rsQMaT6ccVdv+mgrJLIcdD
J8J+9bvImjIqOG9McfvoQsbown17VEmF9y2RA2WXyPiIqfLdR1VUGHx0x3Lw
Khm/7KgvyKmhwqaD9r+53ch4bh177a86Krz9qv7B4C4Zc71SS3RpogLNVXLt
WS8yJh0ujuFtoYKC/PL9e/fIuKZ9YntgKxUc2unsBH8yTqquu9DZRoXkqGrX
/KD/+5ssKtpBhT6jrM72UMKed7mkXCcVZFcSjrDCyPjiufKzwl1UOJsd9FMy
goztHQ43txL86spl9e3RZJxpLnPG5w8VuhUtX1nEkLFgj2b7MsEyXbtF3eLI
uAue77DppoLtEwX/qOdk/GAs+nQswQkmgv8yXpLxr/KbW1IJ7uKYcqhOIuP5
s7+fPCd4fW5H49gbIn+PN991Jvj09aIDAh/IOPXA9V8Ugp8rp2appJIxjgs9
GUXY6+iOVjJKJ2PLtaHyTMK/dU894pwyydhvJlVAmeBTR8/xBX0l4yF1K5Ye
EV88t7FHcjYZ61dSmlSJ+NvyNUYLc8n4HU9gyBShzxr3tWd6fpAxhD1gxRH6
ndhMqloCMi59Lb16DaHv074hfeliMs5wtIPrhP4t8bXpeqVkfOdf3ODbBipI
mH2Xsa4g4zPJu9y+Evmy5H0VeaeKjI12dh5OIPIZUxBCelpLxiar9W3tiXw3
3rp641sDGVMu7Y9arKCC2NYT/Q3NZHzZg1TrTtRL9ItNJSJdZOwx/3rtxC+i
v8wp29V7yFi+8SpruoAKogIz7470k/FCbNGjxnwqRNwtCX0wTMYxr6KDNmRR
Idzq/GGuGTKWZfTZ9L+jwodjXTZOLDL2VV9edeI1FYqMra6WLZDxuLrM7IsE
KsztMYp+yMmLZ+k+gy8fE/7oFiYzeHixzYeuQutHRL9o7fp2jJ8Xx3b6OA+F
EvWlpNa6WpQXh8uc+XLHmwo+sm+Hb63mxaLN8Sqetwm9pTbMt0ryYl6GtIAp
0e/VwiIbEjbw4pF3if9dPE8F3bl/DopqvNi/9rPYVSMqWExeuhmizosv2744
x0ZUuDpGCx7W5MVX/G9esNKlwpuelpQ0XV5iHt7Z56tCBeHyPKaOIS++FpzM
iCNTYSA+wPPgOV58JGD7Z2puJSw/Xnj4wZEXr9L0nTj1uRLWPrr5kt+FFztK
ZWdmEfPW1N+5sPoqLy66tfnin4hKyLloQj7hzYstpNWGB85WQoSe2GPnOF58
2oF9GxYq4KPOwzflz3mxwu3kzXuYFVCizp21OZEXW++/4PqgtwLY8rOtzLe8
uKc08MyjkgpwFOzYcOcL4Z+Q5n8GYRWg1/X6Y2g1L57OOfnIXKgCJNVdWJ/r
CP3UrnLUL5bDP191o7ZGXuy2LrdWgVEOqQr5NJUOXnxvFJ8zrC6HdZeaNlYO
8uIFzx//3XtYDiw2+akQiQ9vps2/+r5SBk2Hq2k6XHx4aHeijgejDDJfPtG2
JfPhRqPaNuHOMnAxkK1PF+LDzOyGg9lZZdB2f5fQsXV8OGHO0nPGpQy+r7kc
EK3FhznXyznqlJXC44ta9bnb+bB0vcSRHV9K4Wo+a2O/Lh82TTLYJfSyFJTs
g39qIT4cjBpVddxK4en7RFbjYT5cPjuXdFOqFG5vr78q6cSHH4Spf8tz+A06
FjvOvIjjw59uZLj4NRTD2NAjE94XfNi/8lN2Q1YxJHvTd7kn8uFwi1n9f/HF
sOp9zNrD7/hw4WY51Wd2xcBk/Wue/8KHH3X9krg/VAQpiZ/NTtfw4eufvhxj
/f0F60dVDNfx8GNW/7yP+XeAhnt+24P5+LF59ynVsBsAYavbFCcF+fFa5fHj
59QAWPqhXBVi/Dg+tnaO+bIAmiLphXdl+XF4jVbLo3s/IWJ78u623fxYVFWO
IayeD5z+6zXj3Pjx9Obv6myjbGJ++KtO3eLHSaIbetaxsuDz7JDcMQ9+7K33
Z5L+IQtsLn8T4/Xjxwmfzgb7k7Mg++TR6duP+HHT8IuwWvgKF9V9v59I4cd+
z/Qurlb4D+o6+/dIdhP7heVaX9t+gFc7Uk1ijQUwSXGhKi1JFd3vivguLyaI
db9NO/4QykEHd5Ucih8TxB8eHdxrerYCeTqfsClhCuLu6c5nF6IqUMaT4WsT
k4LYKSK70KWwAkkyheIOsQRx0Zuw07KylWgw2YrO4hbCxtsXuU50V6L7QkP+
1jJC2C793aHzVlWosoc/X+o4waQ3pE2ba9GyUEKNoaUQHq8sM1M9UYu09NT7
3U4K4a/DGve5AmrR8xhzfqqtED5y7+uBne216JLxi5NerkJY6KWy1+99dUjo
65bpzkAhvEjifZg2WodMQ45tfZkthCM/1GY8UmpAydYTxrm5Qljq7K7Qad0G
NLMl2rn5hxBe2ZRmuOdwA0pobHhFKRbC1SGL6u7XGtCI7Amxe7VC+F+xgP+F
7AYUlG8zZzcshGNeD/5T3tuI2iKWVnuNCeHdrygZwaaNSM0hUSOOKYS3Gwku
gF0jauDrvVg7LYTf1AWPlN9rRBtPnO9CHBQcl3vCTv5nI8qbuPhLVoqC3RLf
fn+r1YSESwS69TdQsCgnh89r3ITOxX2aPyVLwZWa3iq3TJsQ316GdrQSBW+M
pea9utiErB5ef8+hTcE8cnJ35142oRS7VcUbdlCweOl26depTWhR80vPrl0U
THlz8LPM9yaU3Da11g1R8On21bIxtU1oYtOdh/2HKZgz48t92+UmdIC9JmXZ
lIKbFBy4EvibUVxVTomUOQXf9jC0/yTejPa6zy+Zn6Jgb/eVLbs3N6OHhT7X
ix0peHgAbxG3aEbdT2Qe9VygYHKWMtTYNCOtC/BxwZWC588ECp90bkZtFI4B
7RsUnCZuaVx7txkpnQmyeutDwfvOLY2Yv2hGVjeyxbj9Kfip5K/1Mm+bUVDo
cO35IAqW7iw1Tk1rRn1fj5goPKTgPYUv/bh+NiPRynu8gREUnPdJxau2hPCv
N7OkP5qCVb+7WJ2uakYJQhIoOZ6C71+vDUntaEaV8kaLHAkUXGYdQb3a14zY
uh65515RsKGlFvXvUDM64fRHW+49BZ9QS67bNN2Mgr1EJv0+EnrZdkE7uxl9
izbI6E2j4MzfrfqHVprRqoJ3KklfKXgoQS3dnL8F4aZW+ko2BY9vKAxmUFrQ
1VH+N/Z5FLzD/VE2FmtBL0n6Z+EnoVdrT+ZhyRZUJXl1w8ZfBDO96BSpFjS/
JanjXgkFP/FNLAnZ0IJU9zfEdZdR8GGtxZ9Zsi3olDW31V4qBUsd/YWfK7Sg
kGs7xBJriHxfj87XVmpBWcEutUv1FEw/Hprgr9KCaC+eh9s2U7CCt87xwM0t
SOxLlfHPNgpO5X1tqLulBRmUL5M3dFFw16nDI6+2tqDr3Rol3j0UPNqp/C5X
vQUlTjv4d/VT8GBhEj1oWwuqFojdqz9IwWPfYyU4NFrQomzZwosRCjZIP/Nq
K8FqO9k5C+MUvCX4xzg/waePqt0+M0HBgm2zzrHE/vvnbbXzpyhYLePn7Vri
+989Iiek5ij48W7doO+E/cHIX+me8xTc9oJj7gjhn/j7KdeOJQpufKSyI5Lw
f/+PTSp6HMLYZNu2FB8iPreGk/Rn3MI4PEfg6xoi/qThB8lsXmHMq6vww4bQ
p3Y5395aUBjnHLVQOULotyzOlM4VFsYpg0Nn6NItaIuabMdaMWFsz3qVp7yu
BZ0xMI+7KyGMJfTTPohJtKCwk0GWbWuFsdRoRvA70RY0FDhcE7dRGNceOJFQ
SG5Bks+lwufkhbG42804I44WdCDziPFJJWHM6e/Fd3OhGSV3ZRZLbhXGj+oE
qHnMZlT3r9/vtoYwtil91NFI1NsKn8TeFm1h3O/D7IzsbUY22z1yYvWEcawR
eTOzjuivw59uzewRxptfaWhEljejvHN/tKwMhHF0jsyLOmhGayIM0sUPCeME
72FBrfRm1DDIn/zEShh/0H6iaRvYjIosHyTknhLGBhqOfNlEv30p4ovrOSOM
VXY+lv1+pRk9TuQNV3MQxl1LD5mfTzSj4yd4bhdfJfRbXOi4rNiMcEnQ9ZEb
wvhOF/UZS7IZaWhxXxK5JYylDz8yUCHmg6gw19kzXsJELe5fc2O8CdX9JplM
hQpjMVsR82cZTahQ2+/AuofCeE5JukEnsQllvl7ZiyIIPQR2lF571ISifJa1
H8YI4wq72LJfrk3o2PbFDQqvhXHnZDkulW1CNW/nJs3zhHF1g+iGOo9GVCB2
Z/zuT2F80C9xtcz5RpThNzuYWCiMqV9v7eE80ogibGY6R0uJ+A/nVYZJN6Kj
4lO/AxqF8cYNKSLhOQ1IP8CtMKVFGKu+qhzyTGxAWyYm82rahfFWzQilhcAG
JFQ18VmqVxgLLRW6pB9tQFWBzGdfxoVxH+9ER1lnPfoxeSWm7a8wdv7hU6pR
UI/S7BkRy/+E8TlH1lalpHoUvns80IQtjHcxTv376lCPDk+NXOnnEcEnQx7+
Mu6vQ5UOdAOxjSJ49G92e1JsLfrD/YEVKy+Ck6MsK3L21aKJ9y6f1ymJ4MQt
TfpxzBokMTYmLbdVBP8Zv+OStK8GnXX/N7dttwj+yuIPz+ysQnOBK+lHT4rg
7fukqlTqKpCA0i/H+tMi+D8lBx+qSwWSLg9Yb2Ungg088mmSpAq0T4j8wMaJ
+N52ni1Jm8tRRIyQ4yV3EUy5O/na8FopUny3TupBpAhujmtTVs8qQjuNOuuE
nojg9h38a913FiGTkYTQqKciOMF26KxBzi90bavsTNxLEex3/QXjRlYhystS
qnv/SQQ7PXCxa9r9E5mVaoeUlIngSrukilaTb+i8y4z+IaoIXriQE5Qs8xXd
Fvg+Ra0RwWFutqS9f/9DL0z1zjU2i2DDHN7YNMpnNNiC9fsHRLCOoXODqsw7
xL7LOeU0JIJlr1xe6opORkLrSz6OjIrg5+zwwI6lV0jL3mjN5KQIrvXJLuMO
i0UHOfhrbs6IYJVOrs9ju6PQqTeVQSyWCL7orWcQURiMXA+G7/ZeFMFdyhv2
S3bdQj5DR/+trIhga24j2kHn2L3/AxbzcT0=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$690#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
m8PTkfNTq6tC6MFQvEGF4Wv1/wEN8b/+
          "]]}, 
        Annotation[#, "Charting`Private`Tag$690#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlXc81f8Xx40I96IhMkpoUUmIkpyPpKLMhoSyk2RnZV3JyN5X1lWRiCJf
IXlHKHuv7M11r5m9fvf31+fxfDzOeb/PeZ3XeX+EjG20zRjo6OhOMtLR/f+7
mCRbvbMzi352n0n1HVZRiJ3VbbNZnEVeW2+7WmNPwAVF94GB8VnEnnhn3x4b
WfAc/bmE6meRLs8l8t0j14HtlKqwd8Is6spmVtr16h5ku1udmQudRUtZNses
xXRBsyH0gqHPLPrVQNC2r9KDWLtWdezJLDprFdaiZGcIwoX6L+hkZ9HFvf7D
qvfMoJLVy89WbBYFfJbbxHzNwUIvNWLw0Cx63hqUVJb9GHK2xz783EU7T+Lr
O+/FJ3BR2abNu2UG7Spzdvitag2aLYQz9NYzKHz8e7IzjwMsiry/YGc0g3SJ
cua+wQ4Q+7xKaejODFJfT5OP2HGA3oO4B2WXZtDki8PaRQOO8PhRtB+BlXbe
SDtzeoATsOUWRMxvUtGTneir3DNO8ImhO9Fojooqp7Zy32o5w0Laoa+KnVTU
822ecmi/C3hS0gfo06iouydoeMvLFYQUqsl2RCpKyqTP/9zhChVh00tDQVSU
GVdLH3/KDdikJPDl9lQkq+roJtjkBjGuRRd8MCqK1exk0N3lDhdqe5QWpKgo
4mvwnIiaO/wV2FY3PkFFof6EDizaHY78vGJ2hYOKCk71B3kc8oBPzHURDL0U
NMyiOqMv4AnDtz7ymTZQUMiojwKTgSfwRPm9q/xJQXyAe9eS4Ak+gor/BaRR
kLizXgFlvxcUmh1WIMdRUKMNxVBRzQtmsjaqbr6moB/0pjy1vl6ge6Ggi8OG
gnavLtuEzHhBqGeUka0RBTnkpS6Z7/GGigpbcvNtCmrPto78eNIbJLRObUZf
oNUTsC8r6Z43MFuSBPkZKIjty6HTzhneIP/FI8P93zQyqE9WHiz2BrvlB+f6
x6dRLtMhthd13tDrc0AptXYa2UfV7FWjesO+6oVahtJpdDo3jiNg0xtucDbd
Mf0yjYJGUkQ32QjwNeG1+YmYaaRklsodd4wAk0OPZwP8p1FEmH9E2TkCHD6p
7EJ2nUb7p33dT18mwB1rYfpbVtNIW3Y4vfs6AV7n7wRmP5xG3txdfTVaBPi5
3ruPU2saTUA4hV6PAEtYcYKt0jRayT2e6G1CADH/uKMt56fRvtHMrzeeEsCw
3jFb6uQ0Or56ZFXPngCx+7VlYvimUce0z+kSFwLU6p5Fy/hp5FhdtvepJwHo
SPgb93fI6EtXlbnlSwLIjE81Fc2T0WqD4+R3fwJYnf6tyz9KRiE7GVpGQQR4
a/9+2L2DjMyC5PX0QwnQVUh42v+HjJLCmUpywgnAvvPwH3wno0rdrpMPIglw
RVneIzWbjNqDA+4YRhHAJYiXmZFERr265NlyGuc0L4eaRpLR/Y+tH1/SeJSn
jafKl4yeqB46+56Wz/cwl3TCmYzCj7wXOx5BAI33oaKBT8hIRUtVGRdGAF/y
0zyyHhlJ2a0euxtMgGIJlUu31MlILDfZjimQAHNOxyuyMTIaZpOpPfSKAMd/
MKpxSpGR2rOy1hRvAugzDrXbHiOj8kl1sZAXBIhQKX3YwkNG9X9Xn048J0BV
WMKEFBsZ/eKdkPpiQ4DNdhfbmM0ptCKoyT9lQQALYymf+0NTSCy15F2uLgGS
M/bgilunkH6V97OrtPm1zlCj+KumUL6eUobaDQIovMhI68+cQgbih7OrpQng
WPZKHEuaQqjtTTiIESBzt8m31LAp9JNziEdSkAAHog9VmzpOIW/JlLNRuwlw
7UWlfvbjKcT8Zi23b8MbnIyfzS09mEIZZK7R4llv6JL4weOvOIWidQzkJDu8
IbFe3/wjxxTaE8gcJZPsDfX5u9bn6aeQaZQy4UKYN2wnfAqRW5pEvExk1OHl
DYaWm/m1PZPoZ1v3COWRN4jsTmScyZhEL1tOWpP4veHOjFKcTOIkGpRRjkhj
9Qbf9mkxr7BJtHziTyyJto/j7y5p73GaRF4KZ/ll3nlBJtZDklSaRGXpX51U
d3nBOTc+Bee+CWRaG5/AnOEBxkblzahpAjmHBUo0uHpA5A1LM5aKCbTdUrDN
eNMD/nEXB8dnTqBdRN2s8ml3KPyq2/PdeQKxzCvbVR13B6ASXej2TaDpOWvL
L75uoGbI8zXw2jhysn3cXEt1ArrPvsL75MZR3e98imWeE+RvzUe8OTOOBuxj
M4ucnEAgoc42i2scXWa7UW61/Rwo7QTx+uExZEkqadRhew7BNykf93iNIceS
aw7ZBxygTqaMFPdtFEXhC1dfsVmDKvvT0LSTI8j4ZG1lutEDiNCMeiHIP4Iy
KlWGhOV1oSvqu0U8+wgyv84T2cB9H8z48EohC8Oo5XmxWF3dXfA+kb3iWDKM
sLE+EQZ5LfhPcdbwquYwmguN/xZ0H4MjTg5SI85DqNCZQBVkV0KPixKOGFgO
oS53HPN+WWWUs/mLvVN/CMn/Ljih8+g6uvSSa7JGkcYn9rRmZ95E98L/S8zD
DaFQhuE9dQe0UVDmCpNPyiDS3u6WN3j8AFF/rHxRDB1A4ly+3RcOmiFbvz4S
4/MBRJV76MsbaIb+qf8Kr9QbQHwecbqma2ZocyDUVkV0ANGJdM9IdpkjPMNx
Ca2KftSpxmgXEmqBTl2789lwvQ/1qD9k29P3FOVwyKUID/WhAonglgUlKyTZ
KRg2+rsPUS63zItlWiE5i2lri5g+tO+vhH2s4zOk+tpH3FaiD2mSA1ov0tug
Jw1fsr3Me1HOyp84vU1bRImNTVJU60Wqvc99pMTskO0j9xBG6V5U88r2eraO
HXKZu/7Mn74XuVWPGPnm2qGAfQOnwxJ70JsvYhe+GtqjD/fYPyW3/EVBLwJU
sj45IDHBxQTDor+IVcjhiEWbA8qZ6AoSJv1F+/Rf+6INB1Tg8v5p+rO/iOhw
6I68iiOqenPpVA7LXzRrR90xHnBEY/1PMn8odKM6+620PavPUWh4ZYyxSDe6
0MgThRNwQheuCBF2s3Qj8aDfNgHghF6ndeloNXeh44v0usyvnJCE1XWmMZMu
xHpoY303mzPqPvRuLvBGF/ov6sPj3WLOyKdxu0f8TBcqvmRQ8ErFGbVLFuS5
LHciQYwxdsvPGbmtHTXEB3aiEvJNluYNZ3Q0y/tm7rNOtIT5C5fyuKB6/V6Z
e9qdiMrW+uqElAs68jOKncTfiXTxS5vPLFxQpR/Dd6mcDtRhQx0tq3NB1hce
pndFdiDpkAb7wFEXdJBcFOHh3IF0R6qFajdckKWancVvrAMVhvTOfj/pivZw
DR7Qa21H8QUHmNTcXVFx5SV6usJ2JEw2vzEQ5opMnOMo7xPbkSmLzsLUW1dU
8Ff914xZO1KLiS55/NsVPQrOzIlSbUecezCfv12uiEWB+c2Fs+0onFtprWLK
Feml/rD1WW1Dl1gZ79OxuaFdt3n1T/S1IRLH8QVNXjeUs+v59bqyNvTp0ZO3
B0+6ITqL04e5g9pQ+v0/3/FX3VAmbwDrd5s2RN7iG72g5YZu1478e3SHFv9i
ldRj4IbSxRNqPx5qQ63FQha+z92Q5uBygTpDG3L0UlB47e2G1iK03y6Ot6Ka
Il+MOcgNvVXKCSHWtqJ+M3R/NdoN3Vpidb38pRVZyl21N0x2Q0vpZqbD0a3o
zvK8q8IHN5R8v0zD37UVJeeIP4z87Ibmv7scb77SiqJn/T0SSt3Qm2dte51O
tCJPHuYkzUo3dFVQYosP34qs+VqNXtS6IWpT0CSaa0HbxoNl/M1uKNZnotW0
vQVhkYn55zrcECathFiLW9DulnnJH3/d0NRYcmZOcguyOnFVtrTfDUXGrcfc
ftmCBKtsfkgPuyF5lXuE1cct6JHp7/IjY26IUi1/9JBaC1pI6TZzmXBDCaoi
vxUlW1A0EANUp9yQai2rpTlPC5JfDD0dR3ZD6zfn8EGbzejS+ZQ7D6dp+tZ1
fP481Ez7323vItFYV+2HdltVMyKJySjp05il4d3SalYzenRckDuKll+o/pp4
KKIZrVwaeXWVdr5Fo+2lK07N6KDYeoIt7X4eTZ1+c71m5GN50oSHVl9V02VC
ENaMLuR6TFyg1e+kdfTol2PNyNbqtkw7rb/jLWy/29iaUfnVmw8ptP7bteef
rM02If5kNRtPmj6+rZ34w+1NiI43wC2Ipp/0ndLPV4qb0Fsuq8j9dW5otO29
9uOUJrTvXHYNd5UbirobtBTk24RUW+BCDHJDVzrsiF+eNKEv73TmQwvd0MK9
+5fa1ZvQAr85+65cmh86FfrXpJpQJj1v2r8MN6R1/xjhMC8tf+5+iyHJDRl+
HQ1prGpE2iTQ+xTihlB+buvBiEaU87xpLuilGzpc4MlrrNeIXgaisAkXN9Rb
eDDt32wDuj5fZ7nfmKZn6a0SXt4GtDLZ/EhRnKYf4mUwGalHYracDExH3NDB
svHrn7LrkQNPbIPyXjfU8cu7VeFKPZp8KxICC65IuzqfbPK0DnWEt1gfzHFF
uTUEiezzdei9V61oTQJtf+vUnZZ3atGnWLLreoAramiYpA+MrkVA1X/faeSK
VNsEeHN+1CDu4ClyILsr+tg+9XDFvwa1R/LvkVlxQSydBe8x7RrErPbI3XjQ
BVV1a0q0jlejRZYgnsu5LujKgO/1Vc5qVHw7aC+dmguSI1OeXzH+jdgjR5WW
rZyRn83o+AmJ32hi1fZck6YzavnXo8O+XYUuG3xJUJB2RpY7NRe74quQlq1z
T/eaE3rD9XHrWXMl8jT3GNvj7YTWFcxexWMVSJgh9Gmxy3N0rUJ/2ZOjAqWz
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
5gwuSyv7wLTzvUdF3+ZAwPLaQRkmH7h6YKXxdOUcXP3XapDlS4BljQu5+wfn
wOLmJQdLgjc8qCx2GDowD0dATZVuzB1EvqBVd8I87AnTt4mxdIT8V9UM+fcX
gO7z4Gc5vDJY7w38gZEX4eq8Mu8jMW/UxEb+mZS0BJTjwryDbhHogkLk55V3
S2D8orr+ZWIEItnJJWtlLoG6u/lNntIIZNv1+gXTtyV4ELj/I54+Eu1JPyXz
rGkJAjr9BcT8IpGG4rMsecZl+MPHvLgaHIUanOdieiyWQdJsvuJkUAySySL6
nrdZBkfmYfabmTEouR9zCHu+DO6WPSJ3q2OQtXKEppLPMujn//ssuDsWse+X
xGUlLEPixaP7/Amx6FaOg7dbwzJ8SfWdN7WLQ7Wjy5a80isgd/K2rv+leGRv
WvL0ttwKGF575h53Lx4dHCVYhWArQFTdrxJgF49MR/DW9GorwOeP9bB9iEfb
Q8J2U2YrsNm3tyJ4zxskOaDuXBS3Avk7V56o9r1BxO70l7obK3DLp6yjXy8R
Keha+UbRr0LAMLXe1z4RjXWde1W/exVAU1WUMTARSXaV+ClyrUKyS8e2/3+J
qLajJVD0zCpk9h4vy8Qnoe3W7bC1h6tgukG4wfs1Cb2/XREuZbYKTmLc5cd+
J6GbrYERz56ugnTZjiFzTxIitnBFDTmvAsfV5s0rDMnoXLNYbHX4KpTujIq9
VU9Gpg33EuPLV0HBNF2opD8ZlbUq9D+oXoXbp3u+Gcwno8Pdx48INK3C5K5r
xCrGFNQ1svwuuY8Wn8neTjmRgm6txWa9W6XxAVN/wrMU9HHbk2q6swrB5S2F
tz1TEPOux2ePM68B969Tz8ihKegnh+zXjP1rcO3wmzWTzylI+mhncbb4GrDv
Ivz1oKagCFG0aX1+DVKWuvUtN1PQjPgHBQn5NZB6cOpmMBMJZVx0Ls9TWYP8
y/UmvftJSECDp+ab6RqYKi8d3xEnIdc7OzjXp2vgaiD3wPk8CXXoTqjJ2a8B
nvUYfeMlEgo3/dZc4rUGwX/MlvhvkNAuN53usjdrMH/J2O/EIxIy8gL+l6lr
YH+q3SzWlIRKfU8YXM1Yg3/5ZzRGnpCQS9jKYNV/a3AlQOI1tyMJtUcPCAeU
rMF9f37CpgsJSb75baryaw1Uy5/VIQ8SoryPm6xtWgNzdb/MPj8SUsn0Egvp
XIOXwgbDskEklP75sZV6/xrI2ZYUWoeRkGGx7FzT9BoYKK68tosjobbGzpV2
5nVoijGtrkojoXPt6GIc+zowrGav0X0kodC/H17c51qHcKEfetyfSOjGmPPO
X6F1OOH/bLs5l4TSyI8UE0+uQ92vdyPO+STEMHf9pcHZdXBlqFFaLSChknWe
3YPy66C3MPjD/zsJ8dLRqaQqrYN34lX32B8k5MQ0+dpYdR2iHT23PREJtbI1
1YlorYO7fCm3YhkJSewp5BjTWYcbzBJxveUkFHKApJn+cB2CtDa1tCpIiMwX
EPnYbB0STt7gTakkoetHbNtOWq3D6uXzqLKKhN4fu89Ntl+HUtbhA5W/Scj3
798WWVdaPb3MP8P+kJBJmEHYK691mOG7OiRbTUJXrg7ebH21DuIPVO78oLHw
mjGLUPA6/NtXsShYQ0L0OWMV1pHrcPPbozePaDxobEEoIa5D2O9KYXca/+SZ
vsyWsg7xE0mPn9M4pe7Zuk4aLX8xROkmjT0JcwVpWevAzyMXsUU7/6GMg8Ni
7jr86b96KpjGl6eXzioWroOmlgZlmVafAMmFElq6DrsY13Iu03jzzkZGb8U6
xJ0aVDOk9dPD6mkmVrsOmd9T3z2k9VtcSifs0rwOmH336ws0Pd44vOyv7FyH
RwtC/dRfJOR2kjlhf/86vO/icvGk6anbF6BjNLoO402qUuSfJHQhEsf1mbwO
G1l6ZAnaPA5eD23anFsHi+f9ztq0ea1s7AlRXaHpE/ikQJ02z44vUSrErXVI
/xjpfayIhGL44sul2DZgT9J+YWOaHxwb+b0IezbgZVF0zm+aX+74Jl9q5N6A
zFTmc7s/k9C+mXf5liIbUD+N99lP89vC2+N2haIbwH6xmmmQ5sdmnY9nmCU2
oPdO1dSrt7T9KstJT5XfgOIjbfIGCSRk63TOZPbKBmiIcBiF0vyscSpf8LLK
BkhW9WgQo0iII6aI2HV3A6SLA1fO0/aBqiJ/97j+BuiEx5lV0/albrt0r6Px
BoxfjmY570NCQRYVrzltNqDwbKlONG3fLA9dv27wfANcNgWL/B1ISLWlmjHr
xQbsHegu0rYmIRb5RvdrARsgMVLLaGNCQn6cf609UjeAWH3uXclNEjKv0D9V
+2EDssXaJy2USUjZdWDiYM4GEJZG3k4r0N6HkVHD/OINGK2Z6Xc4R0I+BbPa
060bYNXdZxTERULGT+05L/7dAAbK4vkJPAkpHlmq9RvcAPUwpjsHae8V3ev1
q8JUWj2EY3mLUynIw4BJVpd5EzTv2kw+TUtBXMRMaXH2TSCyDUiQI1JQZouG
JCPXJgxW7HtET3s/O66/OZMttAmHrTUXVu+kIHHJs0fpL28Cv79AEsN2Mqqw
ahPqUNqEH4KmJZcnktGDD66CWaqb0DgSXs/RlIz8BCr47t6nxRt43LIjJaN+
Zt29Hx02gT4w0OaMfDJyVNzm8HTbBGv6yCZ24WTE5v4Of5uwCebyoZKE3clI
Zp66eyt0EySNJgiCzUkotMdnWzNzE+LOLOAlHiUhhS+fplcHN+HBwuKWunki
aiNrTdVPbAIzj3uIlHIisjy2Mv52ZhPecIpeTxNJRLFvFIdvbW7CJ7/4SvGB
BDTj29FF4tkCj9l3tY2aCShZl67qhvoWvH148djaoTdIOjrt16G7W1CSemLT
dyke1TSoli3obUGNM/9FYl08WlaKKUl8sgW60pzOt13jkbq42Nc53y3IKrzF
vL+eiHYY7pCI37cg1jKrz9wgDrUFcn9RK9+CK5xXY4+Ix6GMPd2IoXoLmhmN
Egy3Y5Hm4YcDVh20fEt6WfukWPT2osVhxfktyD9daNXSHoOu2bonTh3fhpsW
4f/kz0YjvhWFT8lntsGA43aL1GoUmvWgL7ktvQ3fzVBh1s8oRAzy6/mhuA2O
2dnahzSjEDk9nC9SfxvsvF982LaIRKF974lykduwydz13s4nHBmbPs6YJW5D
JY+smrZSOJKdFi18n7INu7+87M5hDEeDqzmdHNnbYM3VlZfPFIYkuYq4R35v
w+iRGwqjS8GoQ7U+OmhrG8pFDjD9eBeADhcuhfda7MDZ/94wMBp7oucz2vyH
bXYgj72WvlDGA9Ud/ZL26PkOnPz2j8uL1R25RlgWDxN2oNTMJhE+uqI2y4GR
yTc7wK9hftum2REFHaqWWarbAaVO/AcLfzPkrqg+43eQDlMw1rW2zDaDjF73
rx/46bDHhUw/hV5aQKtzlsufw3QYd2yjwZz+UxDLYWFkO0aHHTrrf+tZqC10
8f3iCTlHhwUZuCmyPXYCqX+yilGqdJi7hvC9qcsEIKcLRae402FXGGZ+1wiE
wrzv0BqjNx22y6DTa4spDFaNUx9ZvKTDTB+k8TnOhQGToNCpc6/psGSNOe+4
0XA4EnekvDyODhtbdur5VxEJ9/wF58by6LDUt1ZLtu9jofzxoVunp+iwX3Nf
ngsMJkO1cl9uOIUOW7Vt7bR6kgJNIkk8S7N0mLDat1/miynQNyAw8mOZDnMo
r8V98iXBqo6Am8Yueuy7QeODhORUEL/Bn2EvSI+FSoc6Bg6/g/iTvLuK7tJj
t8PequhkZYDhw+MfRu7TYx3epjpeSxlwMlpKlUOfHjP9E8v4Dz5C4Y5auIkx
PRbw/KT3r/aP0NXhI8BhQ49ll4vRbe3KgoOvKNImAfSY3rkvd6fssiFuCJmx
f6fH1sw1y/BKuRDzxvy30REGzLGMztuxvgDcnXwc3EUYMK40wbtPNwrAVDtZ
MO44A7ZLQS8+QPQbSLJ1ONedZsCq5W09Zfy+QYOr8knZiwwYh4CNkKFiIbDo
Hg3EazNgBYd2F1JLi8CNZ1j120sG7Ln1zSNMnSXwKNqgAT/BgC1nxagX/SgD
4a9s/E/JDBj3vvbMqZ4yGG3+9riayoBB9o0mifUysODcR+/3jwFjDfhixyhb
Dvavq6R26Bmxg2+7x4tyy8HP+2z8vAAjxrWjIGyZ9QtyrOhNO7QZMRap1zp/
PlfC1tW0tZRSRmzQeH7r50Y1TI5dcSn334Vtc4wr1Tg0w4fL5/jrjZiw9Wth
tTGjHZD36vnex2eYsZpNsWd8tr0QfNfkJuMSM5Za1GBlfWAI5HpTP/rX78aq
tZjYVhVGQfq2jF5CHAvGLBmhE3RoAqYnQlR3J7Bga5ZSKVGiE/DWfeyiQzIL
lshbpRt3fgL2pkcfvJnGgmlIZVLD1SZgZnWhfT2PBVsVObii6jEBGcmfNR80
sGCUf6oJ9T0TwE8+eY2XiRV7YC/Y8DZ6EhgI/Ofi7Fmx2oigXRwLU9D1nSC6
+JwVG7yf1nd9cwo+L08IabiyYqDXYuPKTAZ9q/x9u71ZMdHR0Be/+MhQoKP2
zymEFXu7UqY9f4UMT8S9vt3LYMV+XTUbex9Bhqae4cvc/awYcdV6c/bENKRz
q8jYD7Fi9iRugR2JafDQ+izeMMqKNew5W8IoNw1iv18I+k2zYqbmO5LUm9Pg
m8dFv7zKir2aEaEq2EzDhcBrFe372bCHTmJLdV+nIUUmUzVGhQ27IM9nj5Om
gEy1gfe3W2xYadHZgyKXKNCgt7egW4MNK+vh8Dh7hQLb3i5Ch++xYY+YcrHj
mhTQr722mm7Mhh3bXdYT+JQCfIYjaYUv2LA6o5kkPhIF8hZie/56smGJfAIa
TukUUHmluneLwIblNO/9UvmJAi6Zue6KAWyYeBqzPBRRoPOf1+2aaDbssINV
dEIzBaIDBeh7s9kwi87tkakdCpwWaJLZ/sKGkcnEBy5MVPiV89LqSD4bNp7n
a77GRoWFVnKnaTEb9u6pwHLLASpoHS7KoVaxYb6Z11eHxKjA8fWu/s4AG0as
/0h4pE2FdGXWSKERNuz6iZ+lHDpUuNxV8ltpnA2j5q5ZftajgtWWiFQAhQ2r
YsmsrDClQu31Bda9a2yYk8VJh8tOVAjoDf0mvA+HvU1XorsXS4WN3NaQgAM4
TD1D94rJGypY+x80nTmIwxrT3NYNkqlwR/LtnmJBHPZFS+gJfzoVjgT890Tr
DA4rXhXx+ZpPhSiDdfgmgcM0msS+iRZSgVkKuA9J47AGP9b44O9UoPT9KZ+U
w2Evrtlu8ZRT4ZtUL7/3DRz2axvnfqWBCmKsQgtjN3HYbJT9Tf5mKiT2m/25
qYHDKKHS6wOtVPAJnHXkuYfDwnt/hZzupsLSQ+mbHro4bEDVWCG/hwoW0q5C
I/o47IzKttmJfiqoDzA05JjgMOmHe3Mbh6lQln/9PddjHLYwW5+ya4wK0q+D
3dwscdjL9X2JRyeowHee+8Q1Oxxm5UV3+9g0FULY9LayHHGYHL1xFxOVCnSD
Ka17XXBY5NYPuuYZKoy/FvXu88RhBKMDjccXqKBraH1PyQeHBQfKQ+4iFerO
fz398RUO60/5b/zYEhUAt8rAGYjDPEUtM32XqZA3KN/tGEzjoXM29StUOFZA
+Pw3DIfdyGvhpVujAjGo6hUWhcPoP9OFCaxTAWeE00+PxWGt+IdfhTeo4Cmj
KYl/g8PuC7x4um+TCvO4GBb7JBw2eKUjYZrGpkPd/Z0kHNa52HMyZ4sKnQWH
/7v8HodxZo4v625TQTXYJOjdBxwmMKRAnqHxD6MMI9YsHJbAwT9htUMFCVmq
rE0ODktNSGlupfE7vCRHey6tn77+EBG6GeAedhqV+w+H7d3bvaNH48Bv34tJ
hTjslqY7zoPGm8F0EcwlOEwp7H20H41tjJUfWyEcFhLF7+VC42HZ15dbynEY
3QwxR5vGd9kb91+owmHTi2XMB2j8Z3g/Oakahz0vFH2KaPdfKrz/k7Eeh1Uw
aSEtGueEJMU+acJhxvfSx2tp9QuZDFs1tuIw+4ZXFWdoHH3hhNL5Tpp+5y/K
O9P6381hxZvwl+YH6opEBk0ft5Evs3T9OCx5dvzVT5qe1MKlSvMhHOb16+Dh
nzS9DUPlEutGcdi6c0hvOm0eyhcrbhCnafNRGNERpc3LzfyefsUMDhtiY9To
o803J2rSZm4eh7kKSF588Y8K3DP4uBurOCyWIuLvOE/Tmz8l03EDhwnJLBc3
ztLmd+NcKWkbh4k2LxO4/u+nt3fHVnfhsZMLTE8ekGl+bJpYPcqCx4wf5d3X
m6T5ecsVr4XDYyPDf9yUx2n7o5Ms9XEvHnuzu/Vf2xBtn/ETBN3DeIy6GLG/
v5MKJRddY14J4bGp/aLkY+1UmDPHfcw9iseyRBfF77VQ4X7Z2SbWU3is5uJi
ik0dFUSdXA4Xy+KxlsLL5i8RFR6+Y5Mcl8Njn2SslnAlVIhsSlTep4DH+Mnr
Yu60/V4XK7OyvIrH9itdOro/lwo1A6zf+bTwmMPxY4EHU6mwjU9suHYHj33O
Jr7qSaSCpJz4sL0OHqNo/tN/RaTCm2ht1loDPKadGX4+JIwKT1USdF5Y4jEl
gt53S3cqkJzOPP3wDI/trXIsMXKmQts75Nlqi8fkZ9SrFeypIL89knbKGY/l
iBOTMh9TAf/19L+el3hs1NBN85oWFbDB0t0s/niMr3q70fImFRzZtfilX+Ox
B9MmAY7KVOh9/PxKcDgea1ZQuih7kQrZAqXh8kl47GzmmRwnQZrefhpnkgrw
WGtoiUrVOAXe6s6pFBXhMWeWthP3ByiwdDrCvL0Ej6W6bH5s6KRAYmtLCvsv
PDbDGSj55A8Fpo7c2+fZSNP3e56rVgYFfL/rrzycpOmn7PW305gCXaFb+19M
47E8PtHsD7oUOGWcLBE3Q7vvdKjHA9r/qYVl8EnjPzxmp7GVZXGZAoL3THqB
nh0772F58yg3BYrnnpQd4WPHrvFGVdCVTwNHBVu//CF2jJx5r3ixYBqM4rLW
7x9hx/BhLGu/s6aBRYEqFXGcHTtRzzC8P2Ya7gbZptNLsWO/XNPuyJhPw9wx
56Dhm+yYuHr44RCGaTiu53v3vQc7dnjhsFKxMBnu2hXs20Vgx3AzoZp395HB
13+y0cSXHSudjlr/TU+Goa+3VEWC2LEAoc/BUoNTkIg/AG+J7Fgbe5mnYMIU
7C1NO0n6yo7NxHTRibJOAdbWObZTwI5dLdkaPbU8CdZk1nePitkxq9dqW4wj
k1DHbX1IsIwdUxE0PCNVMgl+NjL7khvYMecg6UuBVpOweeT3RsIUO5b8c6/y
fMUEnJJdK9ygsGM5D6Q6pT9PwAO1U056c+xY4qqp4M34CfjmGjbHt0LTJ97m
7KzVBNi36IzF7+LAomWDOvfsm4CJl5MNcYIcmNw5ZtXY2+PQMs76NuouBzZ8
wEH8Vd4olN8JTCy6z4G9NmnjyyKOQl45S9yAHi3/2jHWNM9RiEzeHXzKmAO7
amv4kEt1FLTuMTn9subAHhkvsPX1j0BTJZ3qoj8HVpIXLLGyMwwN71fmtYs5
MA7N/05rCQ5B6T5nissPDiwzZ+dd7s4g5Hgvjyf/5MCYH7ZFDA0MQqj+Ug+5
igPz3NqR+5wyCGpci5U+rRyYsHXy+y2BQah7OROfR+HAfPVkrwUJ9EON8Zji
PkFOTI4stzQV3Q19uz6sxghzYnVRN5Z5sG6YS7f4zHucEzttrUn5Se6CA9PT
AkJnOLEjG60bBIUuMHRYWDl7iRO7cM33Rf5AB6y83MlW0+HEMiNyWl1Y2uBo
Gi9fYBgnNphKTykfrAXZ6z1N+ChOzPu7299jXLWgOpXoHx5L4z+FvMbXasDm
zJGluCROLHxku9P4wx8o/u94U3oWJ1ZIdNR5qlcJmlVSfhW/ObE9iTn9IQd+
gInFkvyNWk4sYHWMMfned3Bi+7ZY28CJGZr8+H0lpggS1OWMWts5MYndswFX
cAUw3oHJD49wYpoRvDE1X7NhzYVh0WyCFr/6NLCaIxPw/BUfp8i0/k5w7bSY
poPko+s88/OcGF3nWMc0YzIo07M2OC5xYphxvCxnZCzcf1fju7pK40wmRq3T
oWCpHHzJfZMWf2ksAmGe4DGhtrCzQ2M6OoJ5cJLC/wBLQbAo
          "]]}, 
        Annotation[#, "Charting`Private`Tag$690#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 4}, {-1.6468586045969853`, 1.5996252762234224`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Hprime1\"", "\"Hprime2\"", "\"Hprime3\"", "\"Hprime4\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.722501948451029*^9, 3.722502128573049*^9, {3.722502165946186*^9, 
   3.7225021801559267`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["Sprime", "1"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["Sprime", "2"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["Sprime", "3"], "[", "x", "]"}], ",", 
     RowBox[{
      SubscriptBox["Sprime", "4"], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Sprime1\>\"", ",", "\"\<Sprime2\>\"", ",", "\"\<Sprime3\>\"", ",", 
      "\"\<Sprime4\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.722501969579878*^9, 3.722502027148164*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k8lN8Xx20zFEOLVKikvVCiheRcLQpF+VrLElESQlKpZFfIkkL2kCwl
yR5zx77NyDr2nQipbGP3e35/zev9ep57zzmf87ln7rPT9J6mOQcbG5s0Jxvb
/3+nok5Ura7+wUn01S8rq38g5I9+072pP1i7ixG/99sfOKn0tKfn5x98+m2c
Rs6tP+A8SJvBjD/Y8jTJdP2PCVh7SFXcJeIP7my6+zw64TeI5xo8YTvxB+cK
Hc5gmI7BlQZXSXabCVy28RR544FhmNqVcNLOZALfOvW4JGHkJ4Q8KD/bpzWB
h148k3qT9BM6t/BeKzo1gT9kxuf5HPgJt43feLmumcAPGJkmjMND4Dye2MP+
4Td+JMJyN748AJ/I9CCOznEsMqr9ffRND/RfShY2qx3HncrpSud39sDmYK/4
Mto4/hIkXXkzrRvcdihlvfgwjqeemqT/qu4C/ZPZrfz3xnGDySQXJ6UTyJax
O0Q4xrFTsuIuamYr3GA4fJbZP4Z3e+a/53zVACEbNY+/FR7DDtTsaJMjDVCj
fxjP8o3hGykbbt1tqofjP3/V5f0bxcqUkzbPt9cDZdVoGr6P4jVNf2wOPvgB
+UdUTl1SH8WfhENyv+yqhk1vtlWZOfzClje2dH28RwPlJ2UGn2//wuphZ0Su
12FwNLX+O3PtF75lf0jItoQKrUcKN3sr/cJ8P5uk0r4UQCTD4FYy/y/8YUQh
QDE2F3ZxR3JOJI3gT/pXC+t70kFr4mzo8cgRPJj4TXGs9wt4NI8dfB4wglWP
yu3mIKfBz/hTmuscR/ANsaYvftdTIAV1xB49O4IDpYeHY2XiQdpJWPFh1zCe
sxFlx1e8wNSkuB7XDWOXx+ce9Lo/h9cXLc15Socxm4ip7lc3e5gWyvd7l0Jw
HeOAZ6oBzv2m3/H94TCOndyevj/CD8PvsEdsG4bx7qh4YQVSPL58Y/O3l8o/
Me90c2LunkzM9sVDfIP8TyytIzJmiTNx5vK/oHDJn3jbyW29cbpZWDSCbpsq
+BOrbz1emuKejcebXaUY/UM4rJTDR7U6F/upjSevez6EwyPu9ChvLMQoXH/r
O/shTN3CnBALKcTTI+Uvdt4awjz2Q+URm6nYwOv97aOXh/Ah36s2TkIYSxTp
7NESGcIJbX8audxomH68KDY0ZxDfmzSQm9Aoxi6eUuvEUgdxjtquwBKvYizb
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
r+imhL1TMPV/DiMagQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$775#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k4lG8Xx21DZYYWJVRCWQqVSpScm0SpX0qyFEKSlCVKhcqeUiRrSJuQ
LYkU5bZlD6Gy78aMZcxYZozE+7x/zfW5nnnOfc73LPdzZOxcjS/y8fDwSPDz
8Pz/d/r5vpqlpUlslj4VI7ImrThm0qLVdXoSz3+6dTRmPghr6Pj09lInsYxy
ZHVybzS+O1Qyi39MYpfCV2f109/iFdsNZX0TJnHmp6GZ5ygfy3629ObZN4kL
NolsWn+tAn9ffi/YbdskrrY44jiX+B07nnsV0bdxEtd/uVVd9L0SZy8Op5YI
TGIh4Sb9eUoN1jzs2urbzMA+7lcki27/wCeb/VR4XRjYMMcnJb+vGU/LJWtc
s2VgjVrysWjrFhxzo/JQvwkDJz3So/N1tuCu9cJnSw8wcGKLMim8sRVfOh8V
7LecgZef0pBKSP2N746n9PK+ncCn4m7O8q7twDLaNaPX4iZwwucajXCfDlwR
PjbbH0rwIa8v3wc68IrdO8ll7hNYvi9bam9GJ46+/UXDH03g4zIlJceUu3Gm
YH0EX9c4vmceUlrF7MUDx99J2jeMY61A9q3jW/uweGTwm+8l49gqcmS196k+
7C+tkx/ydhzzxBSfy07twxYan9pEXMcx1ds68MGxfhx2N9LWzXYcb3JZ7lHs
3o8rKtxGf54ex4NaSy46z/rxzlPbF6I0xrFDsXjw3qF+LOj0UlqKbxxXGufW
sK4NYK2cO2k+M2P4ccfXktzIAXyNfXZXD3UMu2GhlzV5A7jLf+2hV3VjeGAs
nL0wM4A/Jjx0UIgew1EfmdNRzoOY1n9pMuT+GFae/C67+eEg3qR4+Nbo7TEs
2tM1tCxlED/MW3qQZT2GzcT2jbI7B7HNj+tZuxXHsGXkNr3zaAjHrDFWj5Yc
w4unai1ZZkO4zmIHZpPHcInX2UCayxBWp9KbvrBG8b9CzZzlCUP4qnKVhdTQ
KD7WmPVwb84Qfu2ePODzexSfGLHcXFsxhClL1jNQNIrj1xbJ7BofwrqHte68
yhrF1bQyK9LSEL4VKiHI/3IUL7YVzB5eNYyHxFvFKwNH8bSGSrPonmFcuPPo
geMnRnFx/w3dXvdhzPSUr8hCo7j2g6zjDr9hLP+N/z/R3aM4gpuybDpsGEcc
LbZuFh/F+dKbtdrShnFleMLI7hWj+GSqXtjfvGG88OuWW/QCHa+JfdkeXTKM
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
tR96o/Gdkf+mlpYIfRf4pw475Bf/D20VwK4=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$775#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
fFiA7W7uUvn7KDh0Y/lzwaYFqPzDVyBxgoI9i0+vjlNahH+UqNpDZhTsev+N
ndG+RditubPX9SQFF+Wr2tTqLEJEmClf1WkKNs4OeXDTYhGcDCNPejhScJmX
M4eq5yLEuO1wir9C7KcsI1TvvwjNH8CzyYWCU97SlI1CFkHrX98nxdsU7M3J
8aftwyJQspRYv3womGtsRve/n4uAuwt5eP0pOM+DV6+jbhFuUk9sUH1MwcfH
w78coC9C56Vbuk+eU7By+xHlN8OLkCpZ+FzrLQVLKGr5R/Gwodfw+EeHGAom
z5o4cAqxYf3t3tywDxQsK+uzXmc9GzwbVv0ZS6TgqjoG+bgcG4z9THa8/UzB
N3q0teO02fDeasrwyxcKrpwL/vFVjw2zSiH2LV8puFdfaSLViA1RTY3R1O8U
3FhFNZe2YMNk3I2v28soeENyp2K0NRt0765t168gzr9MbVk4x4YRGQsRzzoK
VnJVq1V3YoMWa25nRCMFT12Iz5FyYcPzn+FHPrdQsIfJ1Xe/b7JB7Wq778Qv
Ch7Nd48duM8G3wKb+TPDFPw91+yjWDAb6MF/13iMUnA8U6O2KIQNinbvlMMn
KNirm3Ecv2RDI2/35ToWBf/Lbg8sjWTDlk4vv9F5Cj6Wad5c/o4N7rRNH3iW
KNjmhnjMh1g2SFuc70ScVFy4/Vbvrzg2uG7nWrTmomJ1TdUx9UQ2lC1/XOfO
Q8XCSoFvnZLZIF6vvzuMn4onl2hwI5UNzh8GjdOpVPwwsHjDCRobitz8naqF
qZgvKOsuOYMNa4y2BQyvoeJtDy0/Pc5kg/3Gio9colRslnT2wmAWG/KnLhfL
SFDxqzkzr/U5bBAs5e/S2kjFa5ZiiiU+s8E2PJltKUPFsQMBUzMEZzseFb21
mdjPZWfLu1w28GqP7wmRp+Lqlmf7pPLYYL06+HjqdiqW+u7/x4XgtP6dVyqU
qFjpWE3YK4JJeXWBA7uo2KCPKfWMYPMglzjOPVTM0nXSP0VwwpnV3zeqUfF1
pwd188T6yyqZfzQ0qNg4xNL3EsEm3P8tm2tRcc/qJYVE4jzv6UwxV0TFdPvD
j78S559LDtsbrEvF9eJsh9hsNhg+2GuapE/F2bnJT08S8UaZtl4tM6Bim9L6
wi5Cn6ktt4N6jxD7p34pUUtng96iaMI/Y0KPohdnz6axIbw6r1TClIoTxS9Y
W6awgRFt1aNmTsXXIlff25TEBu0b7L+mlgR3n/LPj2dDyKFIiWvWVDyz85fu
5k9s6BfX2hd0hordnfluWr9nQ1DRfZfvF6hYdsPLoxpRbOgKlXr65xKRb5KC
Z9drNuy+BIlLjlTMm/xLw5TwE53K2bfnOhVnJF63+/iUDUo9sSsmN6l4l7uD
pXcgGx5k60o636bi4O4Yxo5HbJC39jX/eJ+Kvxbbs8Y8CH2vfxbhekjFXGvn
3F+4EX72H64770vF0ydsnywR/u/JOmq0OYjY35apIHqRDcKVnjw+wVRc92bH
hoozRHzd6aW9IVR8w97xwgFLQj/KOvT+NRWv8v1V4UTUY6Xs4WXOKCp2u+Nn
uOUgGxbV73yxjabiL1s2jUTvZ4PFxd97NsVRcdlb+tE2RTasLvy0LSaLiiu9
G5f0+diAm9sGVj5T8alzww0rK4twlcH34Ww+FY8G8x51n1uE6vVXN0oXU7FO
/wvGh95F8LumJvKuloopEe4LnbmLkPPIoe5vAxU/X7so6pOyCP2REU9Ot1Dx
aZan6UDMIuiU/1u1sZN4Pl+hvjNgEZZlfi5FjlCx9v0jQ8Hmi6C4bzFvaYyK
n9lltVMMFuHUMUU36ykqts5uOa6nuQi5d55NScxTsdgMkZ+Ni+DaeHLgDZcg
zr93J/pzzwLEDAe+X+QRxNcqnvrMNyxA3b+Cs1YCgljs+0eDyeIFUFKU6RAT
EcRxcmxpUuwCDPkM14ZLC+IRmuq7ZOsFWB8h8WReVhCnrq6WjzBcAL30o4Yn
5QWxQprEH619C/C+M/37+h2CWPDJVu+3qxfAZu+dvJeagtjHd3G5uGQeGgf5
3oeaC+LizPJLRuvnocQsMOqLpSA+ExBwsotjHjJLeMP/WAviiamum4qjc/Di
Hc8TRTtBXHi8bPVU4RycsOB2+35VEJ/cf/mbxPk5qP/BYcT0F8QZclmvst/O
QtEeLz3xIEEsFbfVJ89nFtJjV7RRsCCuVoiedLk8C8/v/9sTFEYw+Yjovz2z
YLJ3eePmWEG8VnZR++EPFtR+nJ82zRfE9xQOHxlqZ0KhyO0x92+COIc7YL1Q
ARPSvOYG3xUJYnXaj4DBSCYE28z+YpQJYsknk1s+2DDh2FrmD+8mQXz74LFQ
o44ZqPaZeJM5RsS7qKNAKZuGSrsBHRFpIXzVhLpJJ38CfnPFL7yUFcK83HIR
wacnYCrOgSYuL4QFHowfZK+Mw7rRUclNO4QwzxuDu9t0x+HcjZn5XfuFcMDl
B/5lBaMw77OSeuykEO7POj27z2cY+OWLLzScEsIGuvB9QXQYJMu9N5ifEcJf
s6RKy5OHQJeyKtDmohDGSN//Rf0gBIdRLjjdEMIx70V2ZgoOgNwncYnAZ0J4
vQzUG9j0wL7Dv+opoUJYUK25JKCnG4xGovyfvxLCIw/yzcsvdsO1HTKz4W+F
cNLlz5W+rV2QnyNfH5cshI973r1Pae6A42V7/Ep/CuG3N7i52pwa4bzDrJZB
lRBOoIYeO2XeAG78ucyqWiH8MX9d0Feteog01rRtahHC1Sr8Ror81TDYirV6
+4TwfcaTmqL5Elh0JzEvDgnhNdGbWnQTioCyoTRxhCGE9Q3a5b4nfIXdZw+L
Tk8L4fOsyNpy7SzQ5+SrvTkrhA0HMsw5FlPA8kOl78KCEFYXxG/e2X0AR/0n
++8tC+E/Sg6Ln2+Gwv2hYzMrK0LYuIMjOJQ7q/B/s/pxLg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$775#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
iUyYKV5d6txFR8Kq72PaezKRuq8w1lGYUe8JF5K4P5KJlC+0yiF+OuYJbH1W
9JVMCHF7HNJjo+O2DZ+djuaTCZMz2woN+0uwsqX7JH87mbCU3tU/GVuCifwq
R+92kYlL54OfcYSVoIvWR+mKXjIhYiwwtOJXglLFj0SoI2Ti3NueaJN7Jeid
xsc8t0AmzqpdnjusUoJy/mcL6jaxE7sUOQJKh4uRu+DDD5kt7IRJzVWyXHsx
9q3yfqUJshOBvvI8D6uKMfRex5szO9gJg+663nvfinHU0NH3qzQ7ke08JaXu
UYwvjiarPlVhJ3ZsjNW6xlmMR+kG7t/U2IkhVn+DmX9FWHH9v4wmDXbCJU5l
zGSiCFfdHXcI67ATM8avxwqqilC/7OxCogk74an39tfj8CIUNOp58/0RO/Ej
2a9LkLcI06YjWppd2Yn/ig7MsTEXoYqP6n//PNgJhS0WjSUTheiY/NlZyY+d
EGMz0y4sL8SGv26XS8PZiT8wo5bgXYjh/tuYW1PYCQ1/1ZXqkQLct63y6Oon
doI133RqoKEA81O9bEXT2YnMGFrP7/wCnK4ZbjDNYie6VM6yccYUoJZwZupY
ETuxLo+HUDtXgNxfruivdbATTO9VfnyJyEe/1uBvYrwcxMamLfdqePJw+XMN
zW8zB7Fsb6zsMPML7Xy3mo5v5SBulWaUNtf/Qu1DrzZmiXAQyaOpGwZjf6Go
31crrf0chFasuxKnxC/8Jtsq5H6egwi0kJpT3peLUuQd030XOIje17S7vRy5
GNtuVnJBg4PgXJq+4FOP6Ok/cW+LDgfhmfJUz+4SonoHS0XqTQ7CiSWAa0b5
J/YH7HFvc+UgjjZ/7LjE9QOvGtnpKHtyEKcEJfI5C7Kx/MiXfe98GP689sk/
7pSNaZ0KTfeCOAiqQebycG8Wuh7VPMQZzUF0DhMGMV8ykb/boffEVw4i/GG5
ffaRb3jmeMH5qBEOgq97KECc/hmdzHX0C8Y5iICg3Dht+8+YGjZ4e3KKg0hK
k45e2vYZ+cc5I88vcBDRyXttE+0+Yf+rK30L6zkJ5+lNzZ38qejHOeBxVZiT
2Eb1FqNrJ2FpBzlbUIuTqBR0XKgbisRVztiKs9qcxEae7VfbVCLw0Anp7ru6
nMSTm1+nXd+GY3T4JXKZASdxUGeu3e96CNqoxOg+suYkNJ1F/NfUfJDzy76/
LV6cBFOL7ynlCitQp2rsf57BWD95rfoHJR5eXZ1UyczkJLztAvfsNn0Js/tC
zOt+cBLp5VcnGvReQWxN9QuufE7CvWpH4cazCTAkqsPr+ofhv1zNu+UDSeCd
rT9/Y5CTUDT8pqS24xNkTVr9EhXkIqLshU9zff0O3AXs7QrbuYisNvnsXacz
wTjy/ZKeKBdRrr2hY6omE0iKY7IhElxErZ+v2tvZLLgSSElkluUi9PbppDxV
yoHJXQ8Cuy9wEdssdKxW/uWCxHXvKwkuXMRWsysO2muFcOVOBu96Dy7i0+XJ
3MyrReDtO/jnpjcXEZu4QyQsvQi6vqip7gzkIkx8rHxf2xRDLOdmeBXFRSzt
YJI601EC//18Ixn/hYuwTD9g1dZaBiuixcsxQ1zEmFzr+xWBKth7bPH78igX
Yetml1WmXgXXLu51uD7JRThWvits9qqCbw8fTwrOcxEKl4ciMser4G61bt+z
9dwEqeZ1oFtxNQx4DVZEinATtdZCKno+tVDdT34VdoWbSL78NyZOthHytP1j
M/W4CX7rtLx020ZIyyNFdlznJl6d0xIjJTZCaBxb0F4TbuJapelRC4Em0NLZ
4JBvx0109D8z4FjXDJWFTKozvtxEkHzx2f+6W6AiYX7qUhY3kVD2N+h0ZQf8
5H0w6pjDTchdf9uSTOqEVPe5/rhcbiLFkY2uvacTgvVnW4aLuInE5EesXDad
cJFvptCzhpt4dlPS57/JTij3Gn+WNspNSLbSnVyZuqHUpE+JV4SHmLBKS/GX
74W29W8XnorxED4awUNfTXthMtHyo4AED+HPmqvJE9wLm0dGtu3Yz0PsM/ix
S7WrF4zsp+cPyPMQdaQaWo9/H8x7raVc1OUhNvurJef19IP4GwFB/8c8RH5r
kIBo9hAcO9dSyRnGQ7S9fi4jOzwEqkOxvk8ieIg0tquZDwSG4fZ+0dnI5zxE
3+zPhKeOw5D1VaIy8T0PkSQTRJc8PgKaRbLUgmIeguJlcb8sfxRuWs4qnC/j
IZ6K+h1gnRsFB/ZvM2UVjHiyKsPvSY5BjPoJ45o6hv2bTdOjtDHorycUunt4
iCzW3BmN6+Ow6MgyYzbAQ3gpsq3b93gcOIUK3g0N8xCzUSldCvnjcMjw3Jap
KR6Cw9A1/t/eCTjDTK64N8tDfGjzLU0xmgC916XeCwuM2foxVTfs6QRYnwmS
d17hIaYPcd9KLZ0Al4GL02trPETV1ZoDa2sT8D/HnRfh
          "]]}, 
        Annotation[#, "Charting`Private`Tag$775#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-1, 4}, {-1.6700654804779544`, 1.2687939464488616`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sprime1\"", "\"Sprime2\"", "\"Sprime3\"", "\"Sprime4\""},
       "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.722502027738401*^9, 3.722502128743801*^9, {3.7225021661283484`*^9, 
   3.722502180325983*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.722501251550568*^9, 3.722501264673517*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.722500547001603*^9, 3.7225006150830803`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.7224996226977158`*^9, 3.722499622704747*^9}}]
},
WindowSize->{808, 602},
WindowMargins->{{4, Automatic}, {Automatic, 4}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1295, 36, 138, "Input"],
Cell[1878, 60, 290, 6, 32, "Output"]
}, Open  ]],
Cell[2183, 69, 1681, 42, 264, "Input"],
Cell[3867, 113, 205, 5, 32, "Input"],
Cell[4075, 120, 751, 22, 96, "Input"],
Cell[CellGroupData[{
Cell[4851, 146, 120, 2, 32, "Input"],
Cell[4974, 150, 403, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5414, 164, 120, 2, 32, "Input"],
Cell[5537, 168, 407, 9, 32, "Output"]
}, Open  ]],
Cell[5959, 180, 2103, 55, 243, "Input"],
Cell[8065, 237, 727, 21, 96, "Input"],
Cell[CellGroupData[{
Cell[8817, 262, 410, 12, 32, "Input"],
Cell[9230, 276, 193, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9460, 284, 140, 3, 32, "Input"],
Cell[9603, 289, 368, 10, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10008, 304, 97, 1, 32, "Input"],
Cell[10108, 307, 1029, 33, 45, "Output"]
}, Open  ]],
Cell[11152, 343, 1026, 29, 138, "Input"],
Cell[12181, 374, 928, 26, 138, "Input"],
Cell[13112, 402, 1215, 37, 117, "Input"],
Cell[14330, 441, 933, 28, 117, "Input"],
Cell[15266, 471, 145, 2, 32, "Input"],
Cell[15414, 475, 1017, 29, 96, "Input"],
Cell[CellGroupData[{
Cell[16456, 508, 128, 1, 54, "Input"],
Cell[16587, 511, 252, 5, 32, "Output"],
Cell[16842, 518, 239, 4, 32, "Output"]
}, Open  ]],
Cell[17096, 525, 1186, 32, 201, "Input"],
Cell[18285, 559, 1246, 34, 201, "Input"],
Cell[19534, 595, 861, 25, 117, "Input"],
Cell[20398, 622, 860, 25, 117, "Input"],
Cell[21261, 649, 1130, 30, 180, "Input"],
Cell[22394, 681, 1153, 30, 201, "Input"],
Cell[CellGroupData[{
Cell[23572, 715, 99, 1, 32, "Input"],
Cell[23674, 718, 486, 13, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24197, 736, 692, 21, 32, "Input"],
Cell[24892, 759, 81803, 1429, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106732, 2193, 691, 21, 32, "Input"],
Cell[107426, 2216, 84345, 1470, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191808, 3691, 733, 21, 54, "Input"],
Cell[192544, 3714, 84663, 1475, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277244, 5194, 733, 21, 54, "Input"],
Cell[277980, 5217, 86054, 1498, 240, "Output"]
}, Open  ]],
Cell[364049, 6718, 92, 1, 32, "Input"],
Cell[364144, 6721, 94, 1, 32, "Input"],
Cell[364241, 6724, 94, 1, 32, InheritFromParent]
}
]
*)

